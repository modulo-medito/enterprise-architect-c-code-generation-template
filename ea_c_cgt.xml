<?xml version="1.0" encoding="windows-1252" standalone="no" ?>
<RefData version="1.0" exporter="EA.25">
	<DataSet name="C_Code_Template" table="t_template" filter="TemplateType='#TemplateType#' and TemplateName='#TemplateName#' and Style='#Style#'" stoplist=";TemplateID;">
		<DataRow>
			<Column name="TemplateID" value="{D333C370-A8D2-425c-BAE4-61280FEA987C}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="File"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;&#xA;%if easlRequired == &quot;T&quot;%&#xA;$EASL = %EASL_INIT(classGUID)%&#xA;%endIf%&#xA;&#xA;$filename_underbar = %REPLACE(fileName, &quot;.&quot;, &quot;_&quot;)%&#xA;$upper_filename_underbar = %TO_UPPER($filename_underbar)%&#xA;$guard_begin = &quot;#ifndef __&quot; + $upper_filename_underbar + &quot;__\n&quot;&#xA;$guard_begin += &quot;#define __&quot; + $upper_filename_underbar + &quot;__&quot;&#xA;$guard_end = &quot;#endif // #ifndef __&quot; + $upper_filename_underbar + &quot;__&quot;&#xA;&#xA;/***************************************************************************************************\n&#xA; * @file        %fileName%\n&#xA; * @author      Modulo Medito (chcchc1995@outlook.com)\n&#xA; * @brief\n&#xA; *\n&#xA; * @version     %classVersion%\n&#xA; * @date        %eaDateTime%\n&#xA; * @copyright   Copyright (C) 2024 Modulo Medito. All rights reserved.\n&#xA; **************************************************************************************************/\n&#xA;$guard_begin\n&#xA;&#xA;//==================================================================================================\n&#xA;// INCLUDE\n&#xA;//==================================================================================================\n&#xA;%ImportSection%\n&#xA;//==================================================================================================\n&#xA;// TYPEDEF\n&#xA;//==================================================================================================\n&#xA;\n&#xA;//==================================================================================================\n&#xA;// DEFINE\n&#xA;//==================================================================================================\n&#xA;$h_define = %Attribute(&quot;h_define&quot;)%&#xA;%if $h_define != &quot;&quot;%&#xA;$h_define = %TRIM($h_define, &quot;\n&quot;)%&#xA;$h_define\n&#xA;%endIf%&#xA;\n&#xA;//==================================================================================================\n&#xA;// ENUM\n&#xA;//==================================================================================================\n&#xA;$h_enum = %Attribute(&quot;h_enum&quot;)%&#xA;%if $h_enum != &quot;&quot;%&#xA;$h_enum = %TRIM($h_enum, &quot;\n&quot;)%&#xA;$h_enum\n&#xA;%endIf%&#xA;\n&#xA;//==================================================================================================\n&#xA;// STRUCTURE\n&#xA;//==================================================================================================\n&#xA;$h_struct = %Attribute(&quot;h_struct&quot;)%&#xA;%if $h_struct != &quot;&quot;%&#xA;$h_struct = %TRIM($h_struct, &quot;\n&quot;)%&#xA;$h_struct\n&#xA;%endIf%&#xA;\n&#xA;//==================================================================================================\n&#xA;// UNION\n&#xA;//==================================================================================================\n&#xA;\n&#xA;//==================================================================================================\n&#xA;// GLOBAL VARIABLE DECLARATION\n&#xA;//==================================================================================================\n&#xA;$h_gvar_dec = %Attribute(&quot;h_gvar_dec&quot;)%&#xA;%if $h_gvar_dec != &quot;&quot;%&#xA;$h_gvar_dec = %TRIM($h_gvar_dec, &quot;\n&quot;)%&#xA;$h_gvar_dec\n&#xA;%endIf%&#xA;\n&#xA;//==================================================================================================\n&#xA;// GLOBAL FUNCTION DECLARATION\n&#xA;//==================================================================================================\n&#xA;$h_gfunc_dec = %Attribute(&quot;h_gfunc_dec&quot;)%&#xA;%if $h_gfunc_dec != &quot;&quot;%&#xA;$h_gfunc_dec = %TRIM($h_gfunc_dec, &quot;\n&quot;)%&#xA;$h_gfunc_dec\n&#xA;%endIf%&#xA;\n&#xA;//==================================================================================================\n&#xA;// GLOBAL INLINE FUNCTION DEFINITION\n&#xA;//==================================================================================================\n&#xA;\n&#xA;//==================================================================================================\n&#xA;// EOF\n&#xA;//==================================================================================================\n&#xA;$guard_end\n&#xA;$behaviors = %EASLList=&quot;Behavior&quot; @separator=&quot;\n&quot; @owner=classGUID @collection=&quot;Behaviors&quot; @option=&quot;FWDDECL&quot;%"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{90318D80-B40C-454c-A436-33814E2A1D68}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="File Impl"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;%if classStereotype == &quot;enumeration&quot; or classStereotype==&quot;struct&quot; or classStereotype==&quot;typedef&quot; or classStereotype==&quot;union&quot;%&#xA;%endTemplate%&#xA;/***************************************************************************************************\n&#xA; * @file        %fileNameImpl%\n&#xA; * @author      Modulo Medito (chcchc1995@outlook.com)\n&#xA; * @brief\n&#xA; *\n&#xA; * @version     %classVersion%\n&#xA; * @date        %eaDateTime%\n&#xA; * @copyright   Copyright (C) 2024 Modulo Medito. All rights reserved.\n&#xA; **************************************************************************************************/\n&#xA;//==================================================================================================\n&#xA;// INCLUDE\n&#xA;//==================================================================================================\n&#xA;%if fileHeaders != &quot;&quot;%&#xA;$headers = %fileHeaders%&#xA;$headers = %TRIM($headers, &quot;\n&quot;)%&#xA;$headers\n&#xA;%endIf%&#xA;\n&#xA;//==================================================================================================\n&#xA;// DEFINE\n&#xA;//==================================================================================================\n&#xA;$c_define = %Attribute(&quot;c_define&quot;)%&#xA;%if $c_define != &quot;&quot;%&#xA;$c_define = %TRIM($c_define, &quot;\n&quot;)%&#xA;$c_define\n&#xA;%endIf%&#xA;\n&#xA;//==================================================================================================\n&#xA;// TYPEDEF\n&#xA;//==================================================================================================\n&#xA;$c_typedef = %Attribute(&quot;c_typedef&quot;)%&#xA;%if $c_typedef != &quot;&quot;%&#xA;$c_typedef = %TRIM($c_typedef, &quot;\n&quot;)%&#xA;$c_typedef\n&#xA;%endIf%&#xA;\n&#xA;//==================================================================================================\n&#xA;// ENUM\n&#xA;//==================================================================================================\n&#xA;$c_enum = %Attribute(&quot;c_enum&quot;)%&#xA;%if $c_enum != &quot;&quot;%&#xA;$c_enum = %TRIM($c_enum, &quot;\n&quot;)%&#xA;$c_enum\n&#xA;%endIf%&#xA;\n&#xA;//==================================================================================================\n&#xA;// STRUCTURE\n&#xA;//==================================================================================================\n&#xA;\n&#xA;//==================================================================================================\n&#xA;// UNION\n&#xA;//==================================================================================================\n&#xA;\n&#xA;//==================================================================================================\n&#xA;// LOCAL INLINE FUNCTION DECLARATION\n&#xA;//==================================================================================================\n&#xA;\n&#xA;//==================================================================================================\n&#xA;// LOCAL FUNCTION DECLARATION\n&#xA;//==================================================================================================\n&#xA;$c_sfunc_dec = %Attribute(&quot;c_sfunc_dec&quot;)%&#xA;%if $c_sfunc_dec != &quot;&quot;%&#xA;$c_sfunc_dec = %TRIM($c_sfunc_dec, &quot;\n&quot;)%&#xA;$c_sfunc_dec\n&#xA;%endIf%&#xA;\n&#xA;//==================================================================================================\n&#xA;// GLOBAL FUNCTION DECLARATION\n&#xA;//==================================================================================================\n&#xA;\n&#xA;//==================================================================================================\n&#xA;// LOCAL VARIABLE DEFINITION\n&#xA;//==================================================================================================\n&#xA;$c_svar_def = %Attribute(&quot;c_svar_def&quot;)%&#xA;%if $c_svar_def != &quot;&quot;%&#xA;$c_svar_def = %TRIM($c_svar_def, &quot;\n&quot;)%&#xA;$c_svar_def\n&#xA;%endIf%&#xA;\n&#xA;//==================================================================================================\n&#xA;// GLOBAL VARIABLE DEFINITION\n&#xA;//==================================================================================================\n&#xA;$c_gvar_def = %Attribute(&quot;c_gvar_def&quot;)%&#xA;%if $c_gvar_def != &quot;&quot;%&#xA;$c_gvar_def = %TRIM($c_gvar_def, &quot;\n&quot;)%&#xA;$c_gvar_def\n&#xA;%endIf%&#xA;\n&#xA;//==================================================================================================\n&#xA;// GLOBAL FUNCTION DEFINITION\n&#xA;//==================================================================================================\n&#xA;$c_gfunc_def = %Attribute(&quot;c_gfunc_def&quot;)%&#xA;%if $c_gfunc_def != &quot;&quot;%&#xA;$c_gfunc_def = %TRIM($c_gfunc_def, &quot;\n&quot;)%&#xA;$c_gfunc_def\n&#xA;%endIf%&#xA;\n&#xA;//==================================================================================================\n&#xA;// LOCAL FUNCTION DEFINITION\n&#xA;//==================================================================================================\n&#xA;$c_sfunc_def = %Attribute(&quot;c_sfunc_def&quot;)%&#xA;%if $c_sfunc_def != &quot;&quot;%&#xA;$c_sfunc_def = %TRIM($c_sfunc_def, &quot;\n&quot;)%&#xA;$c_sfunc_def\n&#xA;%endIf%&#xA;\n&#xA;//==================================================================================================\n&#xA;// LOCAL INLINE FUNCTION DEFINITION\n&#xA;//==================================================================================================\n&#xA;\n&#xA;%EASL_END()%&#xA;"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{A616BE4E-B67B-4408-896D-62E90C9A0DEB}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="Class"/>
			<Column name="Style" value="CS=enumeration;"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;%if classNotes != &quot;&quot;%&#xA;$enum_comment = %WRAP_COMMENT(classNotes, 96, &quot;&quot;, &quot;/// &quot;)%&#xA;$enum_comment = %TRIM($enum_comment, &quot;\n&quot;)%&#xA;$enum_comment\n&#xA;%endIf%&#xA;$enum_def = &quot;typedef enum {\n&quot;&#xA;$enum_def += %list=&quot;AttributeImpl&quot; @separator=&quot;\n&quot; @indent=&quot;    &quot; classStereotype==&quot;enumeration&quot;%&#xA;$enum_def = %TRIM($enum_def, &quot;\n&quot;)%&#xA;$enum_def\n&#xA;} %className%;\n"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{6FDE98ED-2AF6-4c8e-939A-950340943212}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="Class"/>
			<Column name="Style" value="CS=struct;"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;%if classNotes != &quot;&quot;%&#xA;$struct_comment = %WRAP_COMMENT(classNotes, 96, &quot;&quot;, &quot;/// &quot;)%&#xA;$struct_comment = %TRIM($struct_comment, &quot;\n&quot;)%&#xA;$struct_comment\n&#xA;%endIf%&#xA;$struct_def = &quot;typedef struct &quot; + %className% + &quot; {\n&quot;&#xA;$struct_def += %list=&quot;AttributeImpl&quot; @separator=&quot;\n&quot; @indent=&quot;    &quot; classStereotype==&quot;struct&quot;%&#xA;$struct_def = %TRIM($struct_def, &quot;\n&quot;)%&#xA;$struct_def\n&#xA;} %className%;\n&#xA;"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{E9630F39-CB2D-4c79-A9AF-C2F2FCE09FAD}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="Class"/>
			<Column name="Style" value="CS=union;"/>
			<Column name="Template" value="%Class__Union%&#xA;"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{D0DE7C27-A25E-48a1-A12F-D679097DB8B0}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="Class"/>
			<Column name="Style" value="CS=typedef;"/>
			<Column name="Template" value="%Class__Typedef%&#xA;"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{C4B950C6-33CB-48c6-8F83-5542CF4B656B}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="Attribute"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;$content = $parameter1&#xA;&#xA;$cmt = &quot;================================================================================&quot;&#xA;$cmt = &quot;c_define&quot;&#xA;$cmt = &quot;================================================================================&quot;&#xA;%if $content == &quot;c_define&quot;%&#xA;$c_define = &quot;\n\n&quot; + %list=&quot;AttributeImpl&quot; @separator=&quot;\n&quot; attTag:&quot;define&quot; == &quot;true&quot; and attScope == &quot;Private&quot;%&#xA;$c_define = %TRIM($c_define, &quot;\n&quot;)%&#xA;$c_define&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;================================================================================&quot;&#xA;$cmt = &quot;c_enum&quot;&#xA;$cmt = &quot;================================================================================&quot;&#xA;%if $content == &quot;c_enum&quot;%&#xA;$c_enum = &quot;\n\n&quot; + %list=&quot;InnerClass&quot; @separator=&quot;\n&quot; classStereotype == &quot;enumeration&quot; and classTag:&quot;anonymous&quot; == &quot;true&quot;%&#xA;$c_enum = %TRIM($c_enum, &quot;\n&quot;)%&#xA;$c_enum&#xA;$c_enum = %StateMachine(&quot;&quot;, &quot;true&quot;, &quot;&quot;, &quot;c_enum&quot;)%&#xA;%if $c_enum != &quot;&quot;%&#xA;\n$c_enum&#xA;%endIf%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;================================================================================&quot;&#xA;$cmt = &quot;c_sfunc_dec&quot;&#xA;$cmt = &quot;================================================================================&quot;&#xA;%if $content == &quot;c_sfunc_dec&quot;%&#xA;$c_sfunc_dec = &quot;\n\n&quot; + %list=&quot;Operation&quot; @separator=&quot;\n&quot; opScope == &quot;Private&quot; and opStatic == &quot;T&quot; and opTag:&quot;define&quot; != &quot;true&quot;%&#xA;$c_sfunc_dec = %TRIM($c_sfunc_dec, &quot;\n&quot;)%&#xA;$c_sfunc_dec&#xA;$c_sfunc_dec = %StateMachine(&quot;&quot;, &quot;true&quot;, opName, &quot;c_sfunc_dec&quot;)%&#xA;%if $c_sfunc_dec != &quot;&quot;%&#xA;\n$c_sfunc_dec&#xA;%endIf%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;================================================================================&quot;&#xA;$cmt = &quot;c_svar_def&quot;&#xA;$cmt = &quot;================================================================================&quot;&#xA;%if $content == &quot;c_svar_def&quot;%&#xA;$c_svar_def = &quot;\n\n&quot; + %list=&quot;AttributeImpl&quot; @separator=&quot;\n&quot; attTag:&quot;define&quot; != &quot;true&quot; and attStatic == &quot;T&quot;%&#xA;$c_svar_def = %TRIM($c_svar_def, &quot;\n&quot;)%&#xA;$c_svar_def&#xA;$c_svar_def = %StateMachine(&quot;&quot;, &quot;true&quot;, &quot;&quot;, &quot;c_svar_def&quot;)%&#xA;%if $c_svar_def != &quot;&quot;%&#xA;\n$c_svar_def&#xA;%endIf%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;================================================================================&quot;&#xA;$cmt = &quot;c_gvar_def&quot;&#xA;$cmt = &quot;================================================================================&quot;&#xA;%if $content == &quot;c_gvar_def&quot;%&#xA;$c_gvar_def = &quot;\n\n&quot; + %list=&quot;AttributeImpl&quot; @separator=&quot;\n&quot; attTag:&quot;define&quot; != &quot;true&quot; and attStatic != &quot;T&quot;%&#xA;$c_gvar_def = %TRIM($c_gvar_def, &quot;\n&quot;)%&#xA;$c_gvar_def&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;================================================================================&quot;&#xA;$cmt = &quot;c_gfunc_def&quot;&#xA;$cmt = &quot;================================================================================&quot;&#xA;%if $content == &quot;c_gfunc_def&quot;%&#xA;$c_gfunc_def = &quot;\n\n&quot; + %list=&quot;OperationImpl&quot; @separator=&quot;\n\n&quot; opTag:&quot;define&quot; != &quot;true&quot; and opStatic != &quot;T&quot;%&#xA;$c_gfunc_def = %TRIM($c_gfunc_def, &quot;\n&quot;)%&#xA;$c_gfunc_def&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;================================================================================&quot;&#xA;$cmt = &quot;c_sfunc_def&quot;&#xA;$cmt = &quot;================================================================================&quot;&#xA;%if $content == &quot;c_sfunc_def&quot;%&#xA;$c_sfunc_def = &quot;\n\n&quot; + %list=&quot;OperationImpl&quot; @separator=&quot;\n\n&quot; opTag:&quot;define&quot; != &quot;true&quot; and opStatic == &quot;T&quot;%&#xA;$c_sfunc_def = %TRIM($c_sfunc_def, &quot;\n&quot;)%&#xA;$c_sfunc_def&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;================================================================================&quot;&#xA;$cmt = &quot;h_define&quot;&#xA;$cmt = &quot;================================================================================&quot;&#xA;%if $content == &quot;h_define&quot;%&#xA;$h_define = &quot;\n\n&quot; + %list=&quot;AttributeImpl&quot; @separator=&quot;\n&quot; attTag:&quot;define&quot; == &quot;true&quot; and attScope == &quot;Public&quot;%&#xA;$h_define = %TRIM($h_define, &quot;\n&quot;)%&#xA;$h_define&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;================================================================================&quot;&#xA;$cmt = &quot;h_enum&quot;&#xA;$cmt = &quot;================================================================================&quot;&#xA;%if $content == &quot;h_enum&quot;%&#xA;$h_enum = &quot;\n\n&quot; + %list=&quot;InnerClass&quot; @separator=&quot;\n&quot; classStereotype == &quot;enumeration&quot; and classTag:&quot;anonymous&quot; == &quot;false&quot;%&#xA;$h_enum = %TRIM($h_enum, &quot;\n&quot;)%&#xA;$h_enum&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;=======================================================================&quot;&#xA;$cmt = &quot;h_struct&quot;&#xA;$cmt = &quot;=======================================================================&quot;&#xA;%if $content == &quot;h_struct&quot;%&#xA;$h_struct = &quot;\n\n&quot; + %list=&quot;InnerClass&quot; @separator=&quot;\n&quot; classStereotype == &quot;struct&quot; and classTag:&quot;anonymous&quot; == &quot;false&quot;%&#xA;$h_struct = %TRIM($h_struct, &quot;\n&quot;)%&#xA;$h_struct&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;================================================================================&quot;&#xA;$cmt = &quot;h_gvar_dec&quot;&#xA;$cmt = &quot;================================================================================&quot;&#xA;%if $content == &quot;h_gvar_dec&quot;%&#xA;$h_gvar_dec = &quot;\n\n&quot; + %list=&quot;Attribute&quot; @separator=&quot;\n&quot; attTag:&quot;define&quot; != &quot;true&quot; and attStatic != &quot;T&quot; and attScope == &quot;Public&quot;%&#xA;$h_gvar_dec = %TRIM($h_gvar_dec, &quot;\n&quot;)%&#xA;$h_gvar_dec&#xA;%endTemplate%&#xA;%if attTag:&quot;define&quot; != &quot;true&quot; and attStatic != &quot;T&quot; and attScope == &quot;Public&quot;%&#xA;%if attNotes!=&quot;&quot;%&#xA;$found = %FIND(attNotes, &quot;========================================&quot;)%&#xA;%if $found == &quot;-1&quot;%&#xA;$var_comment = %WRAP_COMMENT(attNotes, 97, &quot;&quot;, &quot;// &quot;)%&#xA;%$var_comment\n&#xA;%endIf%&#xA;%endIf%&#xA;$var_def = &quot;&quot;&#xA;$var_def += %attConst==&quot;T&quot; ? &quot;const &quot; : &quot;&quot;%&#xA;$var_def += %attType%&#xA;$var_def += %attContainment==&quot;By Reference&quot; ? &quot;* &quot; : &quot; &quot;%&#xA;%if attStereotype != &quot;alignment&quot;%&#xA;$var_def += %attName%&#xA;%endIf%&#xA;%if attCollection == &quot;T&quot; and attContainerType != &quot;&quot;%&#xA;$var_def += %attContainerType%&#xA;%endIf%&#xA;extern $var_def;&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;=======================================================================&quot;&#xA;$cmt = &quot;h_gfunc_dec&quot;&#xA;$cmt = &quot;=======================================================================&quot;&#xA;%if $content == &quot;h_gfunc_dec&quot;%&#xA;$h_gfunc_dec = &quot;\n\n&quot; + %list=&quot;Operation&quot; @separator=&quot;\n&quot; opScope == &quot;Public&quot; and opStatic != &quot;T&quot; and opTag:&quot;define&quot; != &quot;true&quot;%&#xA;$h_gfunc_dec = %TRIM($h_gfunc_dec, &quot;\n&quot;)%&#xA;$h_gfunc_dec&#xA;%endTemplate%"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{B3DB6B4B-440F-4526-8538-CFB2F4B1DB87}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="Attribute Impl"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;&#xA;$cmt = &quot;================================================================================&quot;&#xA;$cmt = &quot;c_define&quot;&#xA;$cmt = &quot;================================================================================&quot;&#xA;%if attTag:&quot;define&quot; == &quot;true&quot; and attScope == &quot;Private&quot;%&#xA;%if opNotes!=&quot;&quot;%&#xA;$found_banner0 = %FIND(opNotes, &quot;========================================&quot;)%&#xA;$found_banner1 = %FIND(opNotes, &quot;----------------------------------------&quot;)%&#xA;%if $found_banner0 == &quot;-1&quot; and $found_banner1 == &quot;-1&quot;%&#xA;$found_doxy = %FIND(opNotes, &quot;@brief&quot;)%&#xA;%if $found_doxy == &quot;-1&quot;%&#xA;$define_comment = %WRAP_COMMENT(opNotes, 97, &quot;&quot;, &quot;// &quot;)%&#xA;$define_comment\n&#xA;%else%&#xA;$define_comment = %WRAP_COMMENT(opNotes, 96, &quot;&quot;, &quot;/// &quot;)%&#xA;$define_comment\n&#xA;%endIf%&#xA;%endIf%&#xA;%endIf%&#xA;&#xA;$define_val = %attInitial?value%&#xA;$define_val = %TRIM_LEFT($define_val, &quot; &quot;)%&#xA;$found_do = %FIND($define_val, &quot;do {&quot;)%&#xA;%if $found_do != &quot;-1&quot;%&#xA;$define_val = %REPLACE($define_val, &quot;do {&quot;, &quot;\\n    do {&quot;)%&#xA;%endIf%&#xA;&#xA;%if $define_val != &quot;&quot;%&#xA;#define %attName% $define_val&#xA;%else%&#xA;#define %attName%&#xA;%endIf%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;================================================================================&quot;&#xA;$cmt = &quot;c_enum&quot;&#xA;$cmt = &quot;================================================================================&quot;&#xA;%if classStereotype == &quot;enumeration&quot; and classTag:&quot;anonymous&quot; == &quot;true&quot;%&#xA;$enum_ele = %attName%&#xA;$enum_ele += %attInitial ? &quot; = &quot; value%&#xA;$enum_ele,&#xA;%if attNotes != &quot;&quot;%&#xA;$enum_ele_comment = &quot; ///&lt; &quot; + %attNotes%&#xA;$enum_ele_comment&#xA;%endIf%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;================================================================================&quot;&#xA;$cmt = &quot;c_svar_def&quot;&#xA;$cmt = &quot;================================================================================&quot;&#xA;%if attTag:&quot;define&quot; != &quot;true&quot; and attStatic == &quot;T&quot;%&#xA;%if attNotes!=&quot;&quot;%&#xA;$found = %FIND(attNotes, &quot;========================================&quot;)%&#xA;%if $found == &quot;-1&quot;%&#xA;$var_comment = %WRAP_COMMENT(attNotes, 97, &quot;&quot;, &quot;// &quot;)%&#xA;$var_comment\n&#xA;%endIf%&#xA;%endIf%&#xA;$var_def = &quot;static &quot;&#xA;$var_def += %attConst==&quot;T&quot; ? &quot;const &quot; : &quot;&quot;%&#xA;$var_def += %attType%&#xA;$var_def += %attContainment==&quot;By Reference&quot; ? &quot;* &quot; : &quot; &quot;%&#xA;%if attStereotype != &quot;alignment&quot;%&#xA;$var_def += %attName%&#xA;%endIf%&#xA;&#xA;$var_initval = %attInitial ? value%&#xA;&#xA;%if attCollection == &quot;T&quot; and attContainerType != &quot;&quot;%&#xA;$var_def += %attContainerType%&#xA;%if $var_initval != &quot;&quot;%&#xA;$var_initval = %WRAP_LINES($var_initval, &quot;96&quot;, &quot;    &quot;)%&#xA;$var_def += &quot; = {\n&quot; + $var_initval + &quot;\n}&quot;&#xA;%endIf%&#xA;%endIf%&#xA;&#xA;%if attCollection != &quot;T&quot; or attContainerType == &quot;&quot;%&#xA;%if $var_initval != &quot;&quot;%&#xA;$var_def += &quot; = &quot; + $var_initval&#xA;%endIf%&#xA;%endIf%&#xA;&#xA;$var_def;&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;================================================================================&quot;&#xA;$cmt = &quot;c_gvar_def&quot;&#xA;$cmt = &quot;================================================================================&quot;&#xA;%if attTag:&quot;define&quot; != &quot;true&quot; and attStatic != &quot;T&quot;%&#xA;%if attNotes!=&quot;&quot;%&#xA;$found = %FIND(attNotes, &quot;========================================&quot;)%&#xA;%if $found == &quot;-1&quot;%&#xA;$var_comment = %WRAP_COMMENT(attNotes, 97, &quot;&quot;, &quot;// &quot;)%&#xA;%$var_comment\n&#xA;%endIf%&#xA;%endIf%&#xA;$var_def = &quot;&quot;&#xA;$var_def += %attConst==&quot;T&quot; ? &quot;const &quot; : &quot;&quot;%&#xA;$var_def += %attType%&#xA;$var_def += %attContainment==&quot;By Reference&quot; ? &quot;* &quot; : &quot; &quot;%&#xA;%if attStereotype != &quot;alignment&quot;%&#xA;$var_def += %attName%&#xA;%endIf%&#xA;&#xA;$var_initval = %attInitial ? value%&#xA;&#xA;%if attCollection == &quot;T&quot; and attContainerType != &quot;&quot;%&#xA;$var_def += %attContainerType%&#xA;%if $var_initval != &quot;&quot;%&#xA;$var_initval = %WRAP_LINES($var_initval, &quot;96&quot;, &quot;    &quot;)%&#xA;$var_def += &quot; = {\n&quot; + $var_initval + &quot;\n}&quot;&#xA;%endIf%&#xA;%endIf%&#xA;&#xA;%if attCollection != &quot;T&quot; or attContainerType == &quot;&quot;%&#xA;%if $var_initval != &quot;&quot;%&#xA;$var_def += &quot; = &quot; + $var_initval&#xA;%endIf%&#xA;%endIf%&#xA;&#xA;$var_def;&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;================================================================================&quot;&#xA;$cmt = &quot;h_define&quot;&#xA;$cmt = &quot;================================================================================&quot;&#xA;%if attTag:&quot;define&quot; == &quot;true&quot; and attScope == &quot;Public&quot;%&#xA;%if opNotes!=&quot;&quot;%&#xA;$found_banner0 = %FIND(opNotes, &quot;========================================&quot;)%&#xA;$found_banner1 = %FIND(opNotes, &quot;----------------------------------------&quot;)%&#xA;%if $found_banner0 == &quot;-1&quot; and $found_banner1 == &quot;-1&quot;%&#xA;$found_doxy = %FIND(opNotes, &quot;@brief&quot;)%&#xA;%if $found_doxy == &quot;-1&quot;%&#xA;$define_comment = %WRAP_COMMENT(opNotes, 97, &quot;&quot;, &quot;// &quot;)%&#xA;$define_comment\n&#xA;%else%&#xA;$define_comment = %WRAP_COMMENT(opNotes, 96, &quot;&quot;, &quot;/// &quot;)%&#xA;$define_comment\n&#xA;%endIf%&#xA;%endIf%&#xA;%endIf%&#xA;&#xA;$define_val = %attInitial?value%&#xA;$define_val = %TRIM_LEFT($define_val, &quot; &quot;)%&#xA;%if $define_val != &quot;&quot;%&#xA;#define %attName% $define_val&#xA;%else%&#xA;#define %attName%&#xA;%endIf%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;================================================================================&quot;&#xA;$cmt = &quot;h_enum&quot;&#xA;$cmt = &quot;================================================================================&quot;&#xA;%if classStereotype == &quot;enumeration&quot; and classTag:&quot;anonymous&quot; == &quot;false&quot;%&#xA;$enum_ele = %attName%&#xA;$enum_ele += %attInitial ? &quot; = &quot; value%&#xA;$enum_ele,&#xA;%if attNotes != &quot;&quot;%&#xA;$enum_ele_comment = &quot; ///&lt; &quot; + %attNotes%&#xA;$enum_ele_comment&#xA;%endIf%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;================================================================================&quot;&#xA;$cmt = &quot;h_struct&quot;&#xA;$cmt = &quot;================================================================================&quot;&#xA;%if classStereotype == &quot;struct&quot; and classTag:&quot;anonymous&quot; == &quot;false&quot;%&#xA;$struct_ele = %attType%&#xA;$struct_ele += %attContainment==&quot;By Reference&quot; ? &quot;* &quot; : &quot; &quot;%&#xA;%if attStereotype != &quot;alignment&quot;%&#xA;$struct_ele += %attName%&#xA;%endIf%&#xA;%if attCollection == &quot;T&quot; and attContainerType != &quot;&quot;%&#xA;$struct_ele += %attContainerType%&#xA;%endIf%&#xA;$struct_ele += %attTag:&quot;bitfield&quot; ? &quot; : &quot; value : &quot;&quot;%&#xA;$struct_ele;&#xA;%if attNotes != &quot;&quot;%&#xA;$struct_ele_comment = &quot; ///&lt; &quot; + %attNotes%&#xA;$struct_ele_comment&#xA;%endIf%&#xA;%endTemplate%&#xA;"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{6576B200-861E-4325-B7D1-65876305855F}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="Operation"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;&#xA;$cmt = &quot;================================================================================&quot;&#xA;$cmt = &quot;c_sfunc_dec&quot;&#xA;$cmt = &quot;================================================================================&quot;&#xA;%if opScope == &quot;Private&quot; and opStatic == &quot;T&quot; and opTag:&quot;define&quot; != &quot;true&quot; and opTag:&quot;inline&quot; != &quot;true&quot;%&#xA;$stereotype_stm = %EASL_GET(&quot;Property&quot;, opGUID, &quot;IsStereotypeApplied&quot;,&quot;statemachine&quot;)%&#xA;%if $stereotype_stm != &quot;true&quot;%&#xA;$func_prototype = &quot;static &quot;&#xA;$func_prototype += %opConst==&quot;T&quot; ? &quot;const &quot; : &quot;&quot;%&#xA;$func_prototype += %opReturnType% + &quot; &quot;&#xA;$func_prototype += %opImplMacros%&#xA;$func_prototype += %opName% + &quot;(&quot;&#xA;$func_prototype += %list=&quot;ParameterImpl&quot; @separator=&quot;, &quot;% + &quot;)&quot;&#xA;$func_prototype;&#xA;%endIf%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;================================================================================&quot;&#xA;$cmt = &quot;h_gfunc_dec&quot;&#xA;$cmt = &quot;================================================================================&quot;&#xA;%if opScope == &quot;Public&quot; and opStatic != &quot;T&quot; and opTag:&quot;define&quot; != &quot;true&quot; and opTag:&quot;inline&quot; != &quot;true&quot;%&#xA;$func_prototype = &quot;extern &quot;&#xA;$func_prototype += %opConst==&quot;T&quot; ? &quot;const &quot; : &quot;&quot;%&#xA;$func_prototype += %opReturnType% + &quot; &quot;&#xA;$func_prototype += %opImplMacros%&#xA;$func_prototype += %opName% + &quot;(&quot;&#xA;$func_prototype += %list=&quot;ParameterImpl&quot; @separator=&quot;, &quot;% + &quot;)&quot;&#xA;$func_prototype;&#xA;%endTemplate%&#xA;"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{703C1806-0880-4ff7-810C-CE7F1281BA02}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="Operation Impl"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;$content = $parameter1&#xA;&#xA;$cmt = &quot;================================================================================&quot;&#xA;$cmt = &quot;c_sfunc_dec&quot;&#xA;$cmt = &quot;================================================================================&quot;&#xA;%if $content == &quot;c_sfunc_dec&quot;%&#xA;$func_prototype = %list=&quot;OperationDeclarationImpl&quot; @separator=&quot;\n&quot;%&#xA;$func_prototype&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;================================================================================&quot;&#xA;$cmt = &quot;h_gfunc_dec&quot;&#xA;$cmt = &quot;================================================================================&quot;&#xA;%if $content == &quot;h_gfunc_dec&quot;%&#xA;$func_prototype = %list=&quot;OperationDeclarationImpl&quot; @separator=&quot;\n&quot; opScope == &quot;Public&quot; and opStatic != &quot;T&quot; and opTag:&quot;define&quot; != &quot;true&quot; and opTag:&quot;inline&quot; != &quot;true&quot;%&#xA;$func_prototype&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;================================================================================&quot;&#xA;$cmt = &quot;c_gfunc_def&quot;&#xA;$cmt = &quot;================================================================================&quot;&#xA;%if opTag:&quot;define&quot; != &quot;true&quot; and opStatic != &quot;T&quot; and opTag:&quot;inline&quot; != &quot;true&quot;%&#xA;$stereotype_stm = %EASL_GET(&quot;Property&quot;, opGUID, &quot;IsStereotypeApplied&quot;,&quot;statemachine&quot;)%&#xA;%if opNotes!=&quot;&quot;%&#xA;$found_banner0 = %FIND(opNotes, &quot;========================================&quot;)%&#xA;$found_banner1 = %FIND(opNotes, &quot;----------------------------------------&quot;)%&#xA;%if $found_banner0 == &quot;-1&quot; and $found_banner1 == &quot;-1&quot;%&#xA;$found_doxy = %FIND(opNotes, &quot;@brief&quot;)%&#xA;%if $found_doxy == &quot;-1&quot;%&#xA;$func_comment = %WRAP_COMMENT(opNotes, 97, &quot;&quot;, &quot;// &quot;)%&#xA;$func_comment\n&#xA;%else%&#xA;$func_comment = %WRAP_COMMENT(opNotes, 96, &quot;&quot;, &quot;/// &quot;)%&#xA;$func_comment\n&#xA;%endIf%&#xA;%endIf%&#xA;%endIf%&#xA;$func_prototype = &quot;&quot;&#xA;$func_prototype += %opConst==&quot;T&quot; ? &quot;const &quot; : &quot;&quot;%&#xA;$func_prototype += %opReturnType% + &quot; &quot;&#xA;$func_prototype += %opImplMacros%&#xA;$func_prototype += %opName% + &quot;(&quot;&#xA;$func_prototype_param = %list=&quot;ParameterImpl&quot; @separator=&quot;, &quot;%&#xA;$func_prototype_all = $func_prototype + $func_prototype_param + &quot;) &quot;&#xA;$func_prototype_all_len = %LENGTH($func_prototype_all)%&#xA;%if $func_prototype_all_len &gt; &quot;100&quot;%&#xA;$func_prototype_param = %list=&quot;ParameterImpl&quot; @separator=&quot;,\n&quot;%&#xA;$func_prototype_param = %WRAP_LINES($func_prototype_param, &quot;100&quot;, &quot;    &quot;, &quot;&quot;)%&#xA;$func_prototype += &quot;\n&quot; + $func_prototype_param + &quot;\n) &quot;&#xA;%else%&#xA;$func_prototype += $func_prototype_param + &quot;) &quot;&#xA;%endIf%&#xA;$func_prototype&#xA;%OperationBody%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;================================================================================&quot;&#xA;$cmt = &quot;c_sfunc_def&quot;&#xA;$cmt = &quot;================================================================================&quot;&#xA;%if opTag:&quot;define&quot; != &quot;true&quot; and opStatic == &quot;T&quot; and opTag:&quot;inline&quot; != &quot;true&quot;%&#xA;$stereotype_stm = %EASL_GET(&quot;Property&quot;, opGUID, &quot;IsStereotypeApplied&quot;,&quot;statemachine&quot;)%&#xA;%if $stereotype_stm != &quot;true&quot;%&#xA;%if opNotes!=&quot;&quot;%&#xA;$found_banner0 = %FIND(opNotes, &quot;========================================&quot;)%&#xA;$found_banner1 = %FIND(opNotes, &quot;----------------------------------------&quot;)%&#xA;%if $found_banner0 == &quot;-1&quot; and $found_banner1 == &quot;-1&quot;%&#xA;$found_doxy = %FIND(opNotes, &quot;@brief&quot;)%&#xA;%if $found_doxy == &quot;-1&quot;%&#xA;$func_comment = %WRAP_COMMENT(opNotes, 97, &quot;&quot;, &quot;// &quot;)%&#xA;$func_comment\n&#xA;%else%&#xA;$func_comment = %WRAP_COMMENT(opNotes, 96, &quot;&quot;, &quot;/// &quot;)%&#xA;$func_comment\n&#xA;%endIf%&#xA;%endIf%&#xA;%endIf%&#xA;$func_prototype = &quot;static&quot;&#xA;$func_prototype += %opConst==&quot;T&quot; ? &quot;const &quot; : &quot; &quot;%&#xA;$func_prototype += %opReturnType% + &quot; &quot;&#xA;$func_prototype += %opImplMacros%&#xA;$func_prototype += %opName% + &quot;(&quot;&#xA;$func_prototype += %list=&quot;ParameterImpl&quot; @separator=&quot;, &quot;% + &quot;)&quot; + &quot; &quot;&#xA;$func_prototype&#xA;%OperationBody%&#xA;%else%&#xA;$stm_func = %StateMachine(&quot;Impl&quot;, &quot;true&quot;, opName, &quot;c_sfunc_def&quot;)%&#xA;$stm_func = %TRIM($stm_func, &quot;\n&quot;)%&#xA;$stm_func&#xA;%endIf%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;================================================================================&quot;&#xA;$cmt = &quot;others&quot;&#xA;$cmt = &quot;================================================================================&quot;&#xA;%if opTag:&quot;define&quot; == &quot;true&quot;%&#xA;%endTemplate%&#xA;&#xA;%if opStatic == &quot;T&quot;%&#xA;%OperationNotesImpl%&#xA;%OperationDeclarationImpl%&#xA;%OperationBodyImpl%&#xA;%endTemplate%&#xA;&#xA;$bodyLoc = %opTag:&quot;bodyLocation&quot;%&#xA;%if opTag:&quot;inline&quot; == &quot;true&quot; or $bodyLoc == &quot;header&quot; or $bodyLoc == &quot;classDec&quot;%&#xA;%endTemplate%&#xA;%PI=&quot;\n&quot;%&#xA;%OperationNotesImpl%&#xA;%OperationDeclarationImpl%&#xA;%OperationBodyImpl%&#xA;"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{8187C930-C774-4a1a-88FB-175BB84DA30E}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="Operation Body"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;{\n&#xA;$beh_id = %EASL_GET(&quot;Property&quot;, opBehavior, &quot;ID&quot;)%&#xA;%if $beh_id != &quot;&quot;%&#xA;$behavior_code = %EASLList=&quot;Action&quot; @separator=&quot;\n&quot; @indent=&quot;    &quot; @owner=opBehavior @collection=&quot;Actions&quot;%&#xA;%else%&#xA;$wrap = %genOptWrapComment==&quot;-1&quot; ? &quot;-1&quot; : &quot;100&quot;%&#xA;$behavior = %WRAP_LINES(opBehavior, $wrap, &quot;\t/*&quot;, &quot;*/&quot;)%&#xA;%if $behavior != &quot;&quot;%&#xA;// behavior $behavior\n&#xA;%endIf%&#xA;%endIf%&#xA;&#xA;%if opCode != &quot;&quot;%&#xA;%WRAP_LINES(opCode, &quot;-1&quot;, &quot;    &quot;, &quot;&quot;)%&#xA;%elseIf $behavior_code != &quot;&quot;%&#xA;$behavior_code = %TRIM($behavior_code, &quot;\n&quot;)%&#xA;$behavior_code\n&#xA;%endIf%&#xA;}"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{4F9ADFD4-8EE3-4abc-B68A-0520A6C1FC02}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="Action"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;$guid = $parameter1&#xA;%if $guid==&quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;$kind = %EASL_GET(&quot;Property&quot;, $guid, &quot;Kind&quot;)%&#xA;$UMLType = %EASL_GET(&quot;Property&quot;, $guid, &quot;UMLType&quot;)%&#xA;&#xA;$cmt = &quot;// kind = {$kind}\n&quot;&#xA;&#xA;%if $kind == &quot;Opaque&quot;%&#xA;%ActionOpaque($guid)%&#xA;&#xA;%elseIf $kind == &quot;Call&quot;%&#xA;%ActionCall($guid)%&#xA;&#xA;%elseIf $kind == &quot;If&quot;%&#xA;%ActionIf($guid, &quot;false&quot;, &quot;&quot;)%&#xA;&#xA;%elseIf $kind == &quot;Switch&quot;%&#xA;%ActionSwitch($guid)%&#xA;&#xA;%elseIf $kind == &quot;Loop&quot;%&#xA;%ActionLoopDo($guid)%&#xA;&#xA;%elseIf $kind == &quot;LoopWhile&quot;%&#xA;%ActionLoop_bak($guid)%&#xA;&#xA;%elseIf $kind == &quot;LoopDoWhile&quot;%&#xA;%ActionLoopDo($guid)%&#xA;&#xA;%elseIf $kind == &quot;Parallel&quot;%&#xA;%ActionParallel($guid)%&#xA;&#xA;%elseIf $kind == &quot;Create&quot;%&#xA;%ActionCreate($guid)%&#xA;&#xA;%elseIf $kind == &quot;Destroy&quot;%&#xA;%ActionDestroy($guid)%&#xA;&#xA;%elseIf $kind == &quot;Break&quot;%&#xA;%ActionBreak($guid)%&#xA;&#xA;%elseIf $kind == &quot;RaiseEvent&quot;%&#xA;%ActionRaiseEvent($guid)%&#xA;&#xA;%elseIf $kind == &quot;RaiseException&quot;%&#xA;%ActionRaiseException($guid)%&#xA;&#xA;%elseIf $kind == &quot;Assignment&quot;%&#xA;%ActionAssignment($guid)%&#xA;&#xA;%endIf%&#xA;"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{D7FDC7F8-3CB8-446d-A01F-55869B28A03E}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="Action Opaque"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;$guid = $parameter1&#xA;&#xA;%if $guid==&quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;$stereotype_switch = %EASL_GET(&quot;Property&quot;, $guid, &quot;IsStereotypeApplied&quot;,&quot;switch&quot;)%&#xA;$stereotype_for_start = %EASL_GET(&quot;Property&quot;, $guid, &quot;IsStereotypeApplied&quot;,&quot;for_start&quot;)%&#xA;$stereotype_for_end = %EASL_GET(&quot;Property&quot;, $guid, &quot;IsStereotypeApplied&quot;,&quot;for_end&quot;)%&#xA;$stereotype_if = %EASL_GET(&quot;Property&quot;, $guid, &quot;IsStereotypeApplied&quot;,&quot;if&quot;)%&#xA;$stereotype_return = %EASL_GET(&quot;Property&quot;, $guid, &quot;IsStereotypeApplied&quot;,&quot;return&quot;)%&#xA;$action_name = %EASL_GET(&quot;Property&quot;, $guid, &quot;Name&quot;)%&#xA;$body_code = %EASL_GET(&quot;Property&quot;, $guid, &quot;Body&quot;)%&#xA;$action_note = %EASL_GET(&quot;Property&quot;, $guid, &quot;Notes&quot;)%&#xA;$action_next = %EASL_GET(&quot;Property&quot;, $guid, &quot;Next&quot;)%&#xA;&#xA;$cmt = &quot;// stereotype_switch $stereotype_switch&quot;&#xA;$cmt = &quot;// stereotype_for_start $stereotype_for_start&quot;&#xA;$cmt = &quot;// stereotype_if $stereotype_if&quot;&#xA;&#xA;$NodeIncomingEdges = %EASL_GET(&quot;Collection&quot;, $guid, &quot;IncomingEdges&quot;)%&#xA;$CountOfIncomingEdges = %EASL_GET(&quot;Count&quot;, $NodeIncomingEdges)%&#xA;$IncomingEdge = %EASL_GET(&quot;At&quot;, $NodeIncomingEdges, &quot;0&quot;)%&#xA;$IncomingEdgeNote = %EASL_GET(&quot;Property&quot;, $IncomingEdge, &quot;Notes&quot;)%&#xA;&#xA;$NodeOutgoingEdges = %EASL_GET(&quot;Collection&quot;, $guid, &quot;IncomingEdges&quot;)%&#xA;$CountOfIncomingEdges = %EASL_GET(&quot;Count&quot;, $NodeIncomingEdges)%&#xA;$IncomingEdge = %EASL_GET(&quot;At&quot;, $NodeIncomingEdges, &quot;0&quot;)%&#xA;$IncomingEdgeNote = %EASL_GET(&quot;Property&quot;, $IncomingEdge, &quot;Notes&quot;)%&#xA;&#xA;$FromEdge = %EASL_GET(&quot;Property&quot;, $guid, &quot;From&quot;)%&#xA;&#xA;$cmt = &quot;//CountOfIncomingEdges $CountOfIncomingEdges&quot;&#xA;$cmt = &quot;//IncomingEdge $IncomingEdge&quot;&#xA;$cmt = &quot;//IncomingEdgeNote $IncomingEdgeNote&quot;&#xA;$cmt = &quot;//FromEdge $FromEdge&quot;&#xA;&#xA;%if $stereotype_for_start == &quot;true&quot; or $action_name == &quot;for_start&quot;%&#xA;$for_statement = &quot;for (&quot; + $body_code + &quot;) {&quot;&#xA;$for_statement&#xA;%endTemplate%&#xA;&#xA;%if $stereotype_for_end == &quot;true&quot; or $action_name == &quot;for_end&quot;%&#xA;%endTemplate%&#xA;&#xA;%if $stereotype_return == &quot;true&quot; and $body_code != &quot;&quot;%&#xA;return $body_code;\n&#xA;%endTemplate%&#xA;&#xA;%if $stereotype_return == &quot;true&quot; and $body_code == &quot;&quot;%&#xA;return;\n&#xA;%endTemplate%&#xA;&#xA;%if $body_code == &quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;%if $stereotype_switch == &quot;true&quot;%&#xA;%ActionSwitch($guid, $body_code)%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;=======================================================================&quot;&#xA;$cmt = &quot;Action body codes&quot;&#xA;$cmt = &quot;=======================================================================&quot;&#xA;%if $action_note != &quot;&quot;%&#xA;$action_note = %REPLACE($action_note, &quot;_&quot;, &quot; &quot;)%&#xA;//\n&#xA;// $action_note\n&#xA;//\n&#xA;%endIf%&#xA;&#xA;$body_code\n&#xA;&#xA;$stereotype_for_end = %EASL_GET(&quot;Property&quot;, $action_next, &quot;IsStereotypeApplied&quot;,&quot;for_end&quot;)%&#xA;%if $stereotype_for_end == &quot;true&quot; or $action_name == &quot;for_end&quot;%&#xA;}&#xA;%endTemplate%"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{379723A9-2FEC-45d2-8AC0-EEA8A0F8125E}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="Action Call"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;$EQ = &quot; = &quot;&#xA;&#xA;$guid = $parameter1&#xA;%if $guid==&quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;$action_name = %EASL_GET(&quot;Property&quot;, $guid, &quot;Name&quot;)%&#xA;$action_body = %EASL_GET(&quot;Property&quot;, $guid, &quot;Body&quot;)%&#xA;$action_value = %EASL_GET(&quot;Property&quot;, $guid, &quot;Value&quot;)%&#xA;$action_kind = %EASL_GET(&quot;Property&quot;, $guid, &quot;Kind&quot;)%&#xA;$action_notes = %EASL_GET(&quot;Property&quot;, $guid, &quot;Notes&quot;)%&#xA;$action_fq_name = %EASL_GET(&quot;Property&quot;, $guid, &quot;FQName&quot;)%&#xA;$action_next = %EASL_GET(&quot;Property&quot;, $guid, &quot;Next&quot;)%&#xA;$action_visibility = %EASL_GET(&quot;Property&quot;, $guid, &quot;Visibility&quot;)%&#xA;$action_node = %EASL_GET(&quot;Property&quot;, $guid, &quot;Node&quot;)%&#xA;&#xA;$context = %EASL_GET(&quot;Property&quot;, $guid, &quot;Context&quot;)%&#xA;$context_classifier = %EASL_GET(&quot;Property&quot;, $context, &quot;Classifier&quot;)%&#xA;&#xA;$behavior = %EASL_GET(&quot;Property&quot;, $guid, &quot;Behavior&quot;)%&#xA;$arguments = %EASLList=&quot;CallArgument&quot; @separator=&quot;, &quot; @owner=$guid @collection=&quot;Arguments&quot;%&#xA;&#xA;$target =  %EASL_GET(&quot;Property&quot;, $guid, &quot;Pin&quot;, &quot;Target&quot;)%&#xA;&#xA;$this_umltype = %EASL_GET(&quot;Property&quot;, $guid, &quot;UMLType&quot;)%&#xA;$beh_parent =  %EASL_GET(&quot;Property&quot;, $behavior, &quot;Parent&quot;)%&#xA;&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Guard&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$beh_name = %EASL_GET(&quot;Property&quot;, $behavior, &quot;Name&quot;)%&#xA;%if $beh_name == &quot;&quot;%&#xA;/* Warning: $action_name - Associated behavior not found within the package!! */&#xA;%endTemplate%&#xA;&#xA;%if $this_umltype==&quot;uml:CallBehaviorAction&quot; and $beh_parent != &quot;&quot; and $beh_parent != classGUID%&#xA;/* Warning: $beh_name - Invoking behaviors from other classes - Not Supported!! */&#xA;%endTemplate%&#xA;&#xA;%if $this_umltype==&quot;uml:CallOperationAction&quot; and $beh_parent != &quot;&quot; and $beh_parent != classGUID and $target==&quot;&quot;%&#xA;/* Warning: $beh_name - Invoking operations from other classes requires a &quot;target&quot; pin to be configured!! */&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Reference args&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;%if $beh_parent != classGUID and $target != &quot;&quot;%&#xA;$reference_arg = %EASL_GET(&quot;Property&quot;, $target, &quot;Name&quot;)%&#xA;%elseIf $context_classifier != classGUID and $context !=&quot;&quot;%&#xA;$reference_arg = %EASL_GET(&quot;Property&quot;, $context, &quot;Name&quot;)%&#xA;%else%&#xA;$reference_arg = %genOptCOperationRefParamName%&#xA;%endIf%&#xA;&#xA;%if $reference_arg == &quot;&quot;%&#xA;/* Warning: Context reference not set for behavior invocation */&#xA;%endTemplate%&#xA;&#xA;%if $arguments != &quot;&quot;%&#xA;$cmt = &quot;reference_arg is 'this'&quot;&#xA;$arguments = $arguments&#xA;%else%&#xA;$arguments = &quot;&quot;&#xA;%endIf%&#xA;&#xA;%if $beh_parent != classGUID and $beh_parent != &quot;&quot;%&#xA;$sClass = %EASL_GET(&quot;Property&quot;, $beh_parent, &quot;Name&quot;)%&#xA;%else%&#xA;$sClass = %className%&#xA;%endIf%&#xA;&#xA;$action_name = %REPLACE($action_name, &quot;_&quot;, &quot; &quot;)%&#xA;%if $action_notes != &quot;&quot;%&#xA;//\n&#xA;// $action_notes\n&#xA;//\n&#xA;%endIf%&#xA;&#xA;$Result = %EASL_GET(&quot;Property&quot;, $guid, &quot;Pin&quot;, &quot;Result&quot;)%&#xA;$sResultName = %EASL_GET(&quot;Property&quot;, $Result, &quot;Name&quot;)%&#xA;%if $sResultName != &quot;&quot;%&#xA;$thisResult = %genOptCOperationRefParamName%&#xA;$sResultName$EQ&#xA;%endIf%&#xA;&#xA;$func_name = $beh_name&#xA;&#xA;%if $action_body != &quot;&quot;%&#xA;$action_body$EQ&#xA;%endIf%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Final output&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$func_name($arguments);\n&#xA;"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{5CEF4304-B3B8-49b6-85C8-5793051956BE}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="Action If"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;$guid = $parameter1&#xA;$is_embedded = $parameter2&#xA;$indent_lv = $parameter3&#xA;&#xA;%if $guid==&quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Get decision node sub actions&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cur_decision_node = %EASL_GET(&quot;Property&quot;, $guid, &quot;Node&quot;)%&#xA;$decision_node_subaction_list = %EASL_GET(&quot;Collection&quot;, $cur_decision_node, &quot;SubActions&quot;)%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Get decision node in out edges&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$in_edges = %EASL_GET(&quot;Collection&quot;, $guid, &quot;IncomingEdges&quot;)%&#xA;$in_edges_num = %EASL_GET(&quot;Count&quot;, $in_edges)%&#xA;$in_edge = %EASL_GET(&quot;At&quot;, $in_edges, &quot;0&quot;)%&#xA;$out_edges = %EASL_GET(&quot;Collection&quot;, $guid, &quot;OutgoingEdges&quot;)%&#xA;$out_edges_num = %EASL_GET(&quot;Count&quot;, $out_edges)%&#xA;$out_edge = %EASL_GET(&quot;At&quot;, $out_edges, &quot;0&quot;)%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;End if no out edges&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;%if $out_edges_num == &quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Check which is the if else branch&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$first_out_edge = %EASL_GET(&quot;At&quot;, $out_edges, &quot;0&quot;)%&#xA;$first_out_edge_name = %EASL_GET(&quot;Property&quot;, $first_out_edge, &quot;Name&quot;)%&#xA;$found_else = %FIND($first_out_edge_name, &quot;else&quot;)%&#xA;&#xA;%if $first_out_edge_name != &quot;&quot; and $found_else == &quot;-1&quot;%&#xA;$if_edge_index = &quot;0&quot;&#xA;$else_edge_index = &quot;1&quot;&#xA;$if_out_edge = %EASL_GET(&quot;At&quot;, $out_edges, &quot;0&quot;)%&#xA;$if_out_edge_name = %EASL_GET(&quot;Property&quot;, $if_out_edge, &quot;Name&quot;)%&#xA;$else_out_edge = %EASL_GET(&quot;At&quot;, $out_edges, &quot;1&quot;)%&#xA;$else_out_edge_name = %EASL_GET(&quot;Property&quot;, $else_out_edge, &quot;Name&quot;)%&#xA;%endIf%&#xA;&#xA;%if $first_out_edge_name == &quot;&quot; or $found_else != &quot;-1&quot;%&#xA;$if_edge_index = &quot;1&quot;&#xA;$else_edge_index = &quot;0&quot;&#xA;$if_out_edge = %EASL_GET(&quot;At&quot;, $out_edges, &quot;1&quot;)%&#xA;$if_out_edge_name = %EASL_GET(&quot;Property&quot;, $if_out_edge, &quot;Name&quot;)%&#xA;$else_out_edge = %EASL_GET(&quot;At&quot;, $out_edges, &quot;0&quot;)%&#xA;$else_out_edge_name = %EASL_GET(&quot;Property&quot;, $else_out_edge, &quot;Name&quot;)%&#xA;%endIf%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;if statement, next node from the decision node&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$if_next_node = %EASL_GET(&quot;Property&quot;, $if_out_edge, &quot;To&quot;)%&#xA;$if_next_node_umltype = %EASL_GET(&quot;Property&quot;, $if_next_node, &quot;UMLType&quot;)%&#xA;$if_next_node_body = %EASL_GET(&quot;Property&quot;, $if_next_node, &quot;Body&quot;)%&#xA;$if_next_node_ctx = %EASL_GET(&quot;Property&quot;, $if_next_node, &quot;Context&quot;)%&#xA;$if_next_node_beh = %EASL_GET(&quot;Property&quot;, $if_next_node, &quot;Behavior&quot;)%&#xA;$if_next_node_id = %EASL_GET(&quot;Property&quot;, $if_next_node, &quot;ID&quot;)%&#xA;$if_next_node_kind = %EASL_GET(&quot;Property&quot;, $if_next_node, &quot;Kind&quot;)%&#xA;$if_action_list_cnt = %EASL_GET(&quot;Count&quot;, $decision_node_subaction_list)%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;else statement, next node from the decision node&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$else_next_node = %EASL_GET(&quot;Property&quot;, $else_out_edge, &quot;To&quot;)%&#xA;$else_next_node_umltype = %EASL_GET(&quot;Property&quot;, $else_next_node, &quot;UMLType&quot;)%&#xA;$else_action_list_cnt = %EASL_GET(&quot;Count&quot;, $decision_node_subaction_list)%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;If condition tranform from 'Name' to 'Guard'&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$if_out_edge_name = %REPLACE($if_out_edge_name, &quot;if_&quot;, &quot;if &quot;)%&#xA;$if_out_edge_name = %REPLACE($if_out_edge_name, &quot;_&gt;_&quot;, &quot; &gt; &quot;)%&#xA;$if_out_edge_name = %REPLACE($if_out_edge_name, &quot;_&lt;_&quot;, &quot; &lt; &quot;)%&#xA;$if_out_edge_name = %REPLACE($if_out_edge_name, &quot;_&gt;=_&quot;, &quot; &gt;= &quot;)%&#xA;$if_out_edge_name = %REPLACE($if_out_edge_name, &quot;_&lt;=_&quot;, &quot; &lt;= &quot;)%&#xA;$if_out_edge_name = %REPLACE($if_out_edge_name, &quot;_!=_&quot;, &quot; != &quot;)%&#xA;$if_out_edge_name = %REPLACE($if_out_edge_name, &quot;_==_&quot;, &quot; == &quot;)%&#xA;$if_out_edge_name = %REPLACE($if_out_edge_name, &quot;_&amp;&amp;_&quot;, &quot; &amp;&amp; &quot;)%&#xA;$if_out_edge_name = %REPLACE($if_out_edge_name, &quot;_||_&quot;, &quot; || &quot;)%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Else condition tranform from 'Name' to 'Guard'&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$else_out_edge_name = %REPLACE($else_out_edge_name, &quot;_&gt;_&quot;, &quot; &gt; &quot;)%&#xA;$else_out_edge_name = %REPLACE($else_out_edge_name, &quot;_&lt;_&quot;, &quot; &lt; &quot;)%&#xA;$else_out_edge_name = %REPLACE($else_out_edge_name, &quot;_&gt;=_&quot;, &quot; &gt;= &quot;)%&#xA;$else_out_edge_name = %REPLACE($else_out_edge_name, &quot;_&lt;=_&quot;, &quot; &lt;= &quot;)%&#xA;$else_out_edge_name = %REPLACE($else_out_edge_name, &quot;_!=_&quot;, &quot; != &quot;)%&#xA;$else_out_edge_name = %REPLACE($else_out_edge_name, &quot;_==_&quot;, &quot; == &quot;)%&#xA;$else_out_edge_name = %REPLACE($else_out_edge_name, &quot;_&amp;&amp;_&quot;, &quot; &amp;&amp; &quot;)%&#xA;$else_out_edge_name = %REPLACE($else_out_edge_name, &quot;_||_&quot;, &quot; || &quot;)%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Indent iteration&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;%if $is_embedded == &quot;true&quot;%&#xA;$indent_lv = $indent_lv + &quot;    &quot;&#xA;%endIf%&#xA;&#xA;$if_keyword = $indent_lv + &quot;&quot;&#xA;$else_keyword = $indent_lv + &quot;&quot;&#xA;$left_bracket = $indent_lv + &quot;{&quot;&#xA;$right_bracket = $indent_lv + &quot;}&quot;&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;If content&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;Check #if&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$found_sharp = %FIND($if_out_edge_name, &quot;#&quot;)%&#xA;$if_keyword = $if_keyword + $if_out_edge_name&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;If -&gt; normal action&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;%if $if_next_node_umltype != &quot;uml:DecisionNode&quot; and $found_sharp == &quot;-1&quot;%&#xA;$if_keyword {\n&#xA;%ActionLoop($decision_node_subaction_list, $if_action_list_cnt, &quot;0&quot;, $indent_lv, &quot;if_body&quot;)%&#xA;$right_bracket&#xA;%endIf%&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;If -&gt; decision&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;%if $if_next_node_umltype == &quot;uml:DecisionNode&quot; and $found_sharp == &quot;-1&quot;%&#xA;$if_keyword\n&#xA;$left_bracket\n&#xA;%ActionIf($if_next_node, &quot;true&quot;, $indent_lv)%&#xA;$right_bracket\n&#xA;%endIf%&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;Sharp if -&gt; normal action&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;%if $if_next_node_umltype != &quot;uml:DecisionNode&quot; and $found_sharp != &quot;-1&quot;%&#xA;$if_keyword\n&#xA;%ActionLoop($decision_node_subaction_list, $if_action_list_cnt, &quot;0&quot;, $indent_lv, &quot;if_body&quot;)%&#xA;%endIf%&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;Sharp if -&gt; decision&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;%if $if_next_node_umltype == &quot;uml:DecisionNode&quot; and $found_sharp != &quot;-1&quot;%&#xA;$if_keyword\n&#xA;%ActionIf($if_next_node, &quot;true&quot;, $indent_lv)%&#xA;%endIf%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Else content&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;Check #else&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$found_sharp = %FIND($else_out_edge_name, &quot;#&quot;)%&#xA;$else_keyword = $else_keyword + $else_out_edge_name&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;Else -&gt; normal action&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;%if $else_next_node_umltype != &quot;uml:DecisionNode&quot; and $found_sharp == &quot;-1&quot;%&#xA;$else_keyword = %TRIM_LEFT($else_keyword, &quot; &quot;)%&#xA;$else_keyword = &quot; &quot; + $else_keyword&#xA;%if $else_next_node_umltype != &quot;uml:MergeNode&quot;%&#xA;$else_keyword {\n&#xA;%ActionLoop($decision_node_subaction_list, $else_action_list_cnt, &quot;0&quot;, $indent_lv, &quot;else_body&quot;)%&#xA;$right_bracket&#xA;%else%&#xA;\n&#xA;%endIf%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;Else -&gt; decision&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;%if $else_next_node_umltype == &quot;uml:DecisionNode&quot; and $found_sharp == &quot;-1&quot;%&#xA;$else_keyword = %TRIM_LEFT($else_keyword, &quot; &quot;)%&#xA;$else_keyword = &quot; &quot; + $else_keyword&#xA;$else_keyword {\n&#xA;%ActionIf($else_next_node, &quot;true&quot;, $indent_lv)%&#xA;$right_bracket\n&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;Sharp else -&gt; normal action&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;%if $else_next_node_umltype != &quot;uml:DecisionNode&quot; and $found_sharp != &quot;-1&quot;%&#xA;$else_keyword = %TRIM_LEFT($else_keyword, &quot; &quot;)%&#xA;$else_keyword\n&#xA;%ActionLoop($decision_node_subaction_list, $else_action_list_cnt, &quot;0&quot;, $indent_lv, &quot;else_body&quot;)%&#xA;$indent_lv&#xA;#endif&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;Sharp else -&gt; decision&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;%if $else_next_node_umltype == &quot;uml:DecisionNode&quot; and $found_sharp != &quot;-1&quot;%&#xA;$else_keyword = %TRIM_LEFT($else_keyword, &quot; &quot;)%&#xA;$else_keyword\n&#xA;%ActionIf($else_next_node, &quot;true&quot;, $indent_lv)%&#xA;$indent_lv&#xA;#endif&#xA;%endTemplate%&#xA;&#xA;"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{FB4FD326-C2BF-4b10-8271-892CB5CA2557}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="Action Loop"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;$array = $parameter1&#xA;$count = $parameter2&#xA;$index = $parameter3&#xA;$indent_lv = $parameter4&#xA;$type = $parameter5&#xA;&#xA;%if $count == &quot;&quot; or $count == $index%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;if_body&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;%if $type == &quot;if_body&quot;%&#xA;&#xA;%if $index == &quot;&quot;%&#xA;$index = &quot;0&quot;&#xA;%endIf%&#xA;&#xA;$cur_action = %EASL_GET(&quot;At&quot;, $array, $index)%&#xA;$ctrl_flow_name = %EASL_GET(&quot;Property&quot;, $cur_action, &quot;Name&quot;)%&#xA;$found_else = %FIND($ctrl_flow_name, &quot;else&quot;)%&#xA;&#xA;$cur_action_body = %EASLList=&quot;Action&quot; @separator=&quot;\n&quot; @indent=&quot;    &quot; @owner=$cur_action @collection=&quot;SubActions&quot;%&#xA;&#xA;%if $cur_action_body != &quot;&quot;%&#xA;$trilling = &quot;\n&quot; + $indent_lv&#xA;$cur_action_body = %REPLACE($cur_action_body, &quot;\n&quot;, $trilling)%&#xA;$cur_action_body = %TRIM_RIGHT($cur_action_body, &quot;    &quot;)%&#xA;%endIf%&#xA;&#xA;%if $ctrl_flow_name != &quot;&quot; and $found_else == &quot;-1&quot; and $cur_action_body != &quot;&quot;%&#xA;$indent_lv&#xA;$cur_action_body&#xA;%endIf%&#xA;&#xA;$index = %MATH_ADD($index, &quot;1&quot;)%&#xA;%ActionLoop($array, $count, $index, $indent_lv, &quot;if_body&quot;)%&#xA;&#xA;%endIf%&#xA;&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;else_body&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;%if $type == &quot;else_body&quot;%&#xA;&#xA;%if $index == &quot;&quot;%&#xA;$index = &quot;0&quot;&#xA;%endIf%&#xA;&#xA;$cur_action = %EASL_GET(&quot;At&quot;, $array, $index)%&#xA;$ctrl_flow_name = %EASL_GET(&quot;Property&quot;, $cur_action, &quot;Name&quot;)%&#xA;$found_else = %FIND($ctrl_flow_name, &quot;else&quot;)%&#xA;&#xA;$cur_action_body = %EASLList=&quot;Action&quot; @separator=&quot;\n&quot; @indent=&quot;    &quot; @owner=$cur_action @collection=&quot;SubActions&quot;%&#xA;&#xA;%if $cur_action_body != &quot;&quot;%&#xA;$trilling = &quot;\n&quot; + $indent_lv&#xA;$cur_action_body = %REPLACE($cur_action_body, &quot;\n&quot;, $trilling)%&#xA;$cur_action_body = %TRIM_RIGHT($cur_action_body, &quot;    &quot;)%&#xA;%endIf%&#xA;&#xA;%if $ctrl_flow_name != &quot;&quot; and $found_else != &quot;-1&quot; and $cur_action_body != &quot;&quot;%&#xA;$indent_lv&#xA;$cur_action_body&#xA;%endIf%&#xA;&#xA;$index = %MATH_ADD($index, &quot;1&quot;)%&#xA;%ActionLoop($array, $count, $index, $indent_lv, &quot;else_body&quot;)%&#xA;&#xA;%endIf%&#xA;"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{6A3A9D62-9649-445f-A0CE-FD86C59D6F1B}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="CallArgument"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;$guid = $parameter1&#xA;%if $guid ==&quot;&quot;%&#xA;%endTemplate%&#xA;%EASL_GET(&quot;Property&quot;, $guid, &quot;Value&quot;)%&#xA;"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{E2F395F2-9310-437c-8F31-5F80A227B07B}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="Action Loop Do"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;$guid = $parameter1&#xA;%if $guid==&quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;Get the first guarded child action - representing the iteration&quot;&#xA;$list = %EASL_GET(&quot;Collection&quot;, $guid, &quot;SubActions&quot;)%&#xA;$guarded_action = %EASL_GET(&quot;At&quot;, $list, &quot;0&quot;)%&#xA;&#xA;$kind = %EASL_GET(&quot;Property&quot;, $guarded_action, &quot;Kind&quot;)%&#xA;%if $kind != &quot;Guarded&quot;%&#xA;%endTemplate%&#xA;&#xA;$guard = %EASL_GET(&quot;Property&quot;, $guarded_action, &quot;Guard&quot;)%&#xA;$expression = %EASL_GET(&quot;Property&quot;, $guard, &quot;Expression&quot;)%&#xA;&#xA;$upper = %EASL_GET(&quot;Property&quot;, $guard, &quot;Upper&quot;)%&#xA;$lower = %EASL_GET(&quot;Property&quot;, $guard, &quot;Lower&quot;)%&#xA;&#xA;$found_for = %FIND($expression, &quot;for&quot;)%&#xA;$found_while = %FIND($expression, &quot;while&quot;)%&#xA;&#xA;%if $found_while != &quot;-1&quot; or $found_for != &quot;-1&quot;%&#xA;%if $expression != &quot;&quot; %&#xA;$expression {\n&#xA;%endIf%&#xA;%endIf%&#xA;&#xA;$loop_body = %EASLList=&quot;Action&quot; @separator=&quot;\n&quot; @indent=&quot;    &quot; @owner=$guarded_action @collection=&quot;SubActions&quot;%&#xA;$loop_body&#xA;}\n&#xA;"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{53E4F0EF-5331-46e6-8B9E-77354FF2B5EA}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="State"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;&#xA;$guid = $parameter1&#xA;$sOption = $parameter2&#xA;$paramin_is_static = $parameter3&#xA;$content = $parameter4&#xA;&#xA;%if $guid == &quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;State do function&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;&#xA;$COMMAND_TYPE   = &quot;CommandType&quot;&#xA;$TRANSCEND_VAR   = &quot;transcend&quot;&#xA;&#xA;$IsFinalState = %EASL_GET(&quot;Property&quot;, $guid, &quot;IsFinalState&quot;)%&#xA;%if $IsFinalState == &quot;true&quot;%&#xA;%endTemplate%&#xA;&#xA;$EnumeratedName = %StateEnumeratedName($guid)%&#xA;%if $EnumeratedName==&quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Constant&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$const_entry = &quot;0&quot;&#xA;$const_do = &quot;1&quot;&#xA;$const_exit = &quot;2&quot;&#xA;$const_eq = &quot;=&quot;&#xA;$const_command_var = &quot;command&quot;&#xA;$STAY_IN_CURRENT_STATE_VAR = &quot;bStayInCurrentState&quot;&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Set variables&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$enum_name = %CONVERT_NAME($EnumeratedName, &quot;pascal case&quot;, &quot;camel case&quot;)%&#xA;$do_behaviors = %EASLList=&quot;Action&quot; @separator=&quot;\n&quot; @indent=&quot;    &quot; @owner=$guid @collection=&quot;DoBehaviors&quot;%&#xA;$entry_behaviors = %EASLList=&quot;Action&quot; @separator=&quot;\n&quot; @indent=&quot;            &quot; @owner=$guid @collection=&quot;EntryBehaviors&quot;%&#xA;$exit_behaviors = %EASLList=&quot;Action&quot; @separator=&quot;\n&quot; @indent=&quot;            &quot; @owner=$guid @collection=&quot;ExitBehaviors&quot;%&#xA;&#xA;$parent = %EASL_GET(&quot;Property&quot;, $guid, &quot;Parent&quot;)%&#xA;$parent_do_ehaviors = %EASLList=&quot;Action&quot; @separator=&quot;\n&quot; @indent=&quot;                    &quot; @owner=$parent @collection=&quot;DoBehaviors&quot;%&#xA;$parent_entry_behaviors = %EASLList=&quot;Action&quot; @separator=&quot;\n&quot; @indent=&quot;                &quot; @owner=$parent @collection=&quot;EntryBehaviors&quot;%&#xA;$parent_exit_behaviors = %EASLList=&quot;Action&quot; @separator=&quot;\n&quot; @indent=&quot;                &quot; @owner=$parent @collection=&quot;ExitBehaviors&quot;%&#xA;&#xA;$sTriggeredGuardedTransitions = %EASLList=&quot;Transition&quot; @separator=&quot;\n&quot; @indent=&quot;            &quot; @owner=$guid @collection=&quot;DerivedOutgoingTransitions&quot; @option=&quot;TriggeredGuarded&quot;%&#xA;$sTriggeredUnGuardedTransitions = %EASLList=&quot;Transition&quot; @separator=&quot;\n&quot; @indent=&quot;            &quot; @owner=$guid @collection=&quot;DerivedOutgoingTransitions&quot; @option=&quot;TriggeredUnGuarded&quot;%&#xA;$sUnTriggeredGuardedTransitions = %EASLList=&quot;Transition&quot; @separator=&quot;\n&quot; @indent=&quot;            &quot; @owner=$guid @collection=&quot;DerivedOutgoingTransitions&quot; @option=&quot;UnTriggeredGuarded&quot;%&#xA;$sUnTriggeredUnGuardedTransitions = %EASLList=&quot;Transition&quot; @separator=&quot;\n&quot; @indent=&quot;            &quot; @owner=$guid @collection=&quot;DerivedOutgoingTransitions&quot; @option=&quot;UnTriggeredUnGuarded&quot;%&#xA;$sTransitions = $sUnTriggeredUnGuardedTransitions + &quot;\n&quot; + $sUnTriggeredGuardedTransitions + &quot;\n&quot; + $sTriggeredUnGuardedTransitions + &quot;\n&quot; + $sTriggeredGuardedTransitions&#xA;&#xA;%if $sTransitions != &quot;&quot;%&#xA;$iPos = %FIND($sTransitions, &quot;else&quot;)%&#xA;%if $iPos != &quot;-1&quot;%&#xA;$sTransitions = %MID($sTransitions, $iPos)%&#xA;$sTransitions = %MID($sTransitions, 4)%&#xA;$sTransitions = %TRIM($sTransitions)%&#xA;$sTransitions = &quot;            &quot; + $sTransitions&#xA;%endif%&#xA;%endIf%&#xA;&#xA;$bHasSubMachine = %EASL_GET(&quot;Property&quot;, $guid, &quot;HasSubMachine&quot;)%&#xA;&#xA;$refParam = %className%&#xA;$refPos = %FIND($funcParams, $refParam)%&#xA;&#xA;%if genOptCOperationRefParam==&quot;T&quot;%&#xA;$refParam = %className%+%genOptCOperationRefParamStyle%+&quot; &quot;+%genOptCOperationRefParamName%&#xA;$sInstanceName = %genOptCOperationRefParamName%&#xA;%if genOptCOperationRefParamStyle == &quot;*&quot;%&#xA;$sInstanceName += &quot;-&gt;&quot;&#xA;%else%&#xA;$sInstanceName += &quot;.&quot;&#xA;%endIf%&#xA;%endIf%&#xA;&#xA;%if $sOption != &quot;IMPL&quot;%&#xA;%if $refParam != &quot;&quot;%&#xA;\nvoid %className%_$enum_name($refParam , int $const_command_var);&#xA;%else%&#xA;\nvoid %className%_$enum_name(int $const_command_var);&#xA;%endIf%&#xA;&#xA;%if $bHasSubMachine == &quot;true&quot;%&#xA;$sSubMachineGUID = %EASL_GET(&quot;Property&quot;, $guid, &quot;SubMachine&quot;)%&#xA;%EASLList=&quot;State&quot; @separator=&quot;\n&quot; @owner=$sSubMachineGUID @collection=&quot;States&quot; @option1=$sOption%&#xA;%endIf%&#xA;&#xA;%else%&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;Function do&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;%if $content == &quot;do&quot;%&#xA;&#xA;$prototype = &quot;void &quot; + %opName% + &quot;_&quot; + $enum_name + &quot;_do()&quot;&#xA;%if $paramin_is_static == &quot;true&quot;%&#xA;$prototype = &quot;static &quot; + $prototype&#xA;%endIf%&#xA;$prototype {\n&#xA;$do_behaviors&#xA;}\n&#xA;&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;T.B.D&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;&#xA;&#xA;&#xA;$prototype = &quot;void &quot; + %opName% + $enum_name + &quot;()&quot;&#xA;%if $paramin_is_static == &quot;true&quot;%&#xA;$prototype = &quot;static &quot; + $prototype&#xA;%endIf%&#xA;$prototype {\n&#xA;&#xA;    switch($const_command_var) {\n&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;State exit&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;%if $exit_behaviors != &quot;&quot; or $parent_exit_behaviors != &quot;&quot;%&#xA;        case $const_exit:\n&#xA;%if $parent_exit_behaviors != &quot;&quot; %&#xA;            if ($sInstanceName$TRANSCEND_VAR) {\n&#xA;$parent_exit_behaviors\n&#xA;            }\n&#xA;%endIf%&#xA;            // Exit behaviors\n&#xA;$exit_behaviors\n&#xA;            break;\n&#xA;%endIf%&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;State entry&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;%if $entry_behaviors != &quot;&quot; or $parent_entry_behaviors!=&quot;&quot;%&#xA;        case $const_entry: {\n&#xA;%if $parent_entry_behaviors != &quot;&quot; %&#xA;            if ( $sInstanceName$TRANSCEND_VAR ) {\n&#xA;$parent_entry_behaviors&#xA;            }\n&#xA;%endIf%&#xA;            // Entry behaviors ...\n&#xA;$entry_behaviors&#xA;            break;\n&#xA;        }\n&#xA;%endIf%&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;State do&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;    case $const_do:\n&#xA;        if(!$sInstanceName$STAY_IN_CURRENT_STATE_VAR) {\n&#xA;            // Action behaviors ...\n&#xA;%if $parent_do_ehaviors != &quot;&quot; %&#xA;            if ( $sInstanceName$TRANSCEND_VAR ) {\n&#xA;$parent_do_ehaviors&#xA;            }\n&#xA;%endIf%&#xA;$do_behaviors&#xA;        }\n&#xA;        $sInstanceName$STAY_IN_CURRENT_STATE_VAR $const_eq true;\n&#xA;        // State's Transitions\n&#xA;$sTransitions&#xA;        break;\n&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;switch default&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;    default:\n&#xA;        break;\n&#xA;    }\n&#xA;}\n\n&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;Sub state machine&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;%if $bHasSubMachine == &quot;true&quot;%&#xA;$sSubMachineGUID = %EASL_GET(&quot;Property&quot;, $guid, &quot;SubMachine&quot;)%&#xA;%EASLList=&quot;State&quot; @separator=&quot;\n&quot; @owner=$sSubMachineGUID @collection=&quot;States&quot; @option1=$sOption%&#xA;%endIf%&#xA;&#xA;%endIf%&#xA;"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{F3F46051-17FC-4da0-AA54-05BDB72211A5}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="State CallBack"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;$guid = $parameter1&#xA;$content = $parameter2&#xA;&#xA;%if $guid==&quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;State entry&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;%if $content == &quot;entry&quot;%&#xA;&#xA;$is_final_state = %EASL_GET(&quot;Property&quot;, $guid, &quot;IsFinalState&quot;)%&#xA;%if $is_final_state == &quot;true&quot;%&#xA;%endTemplate%&#xA;$entry_behaviors = %EASLList=&quot;Action&quot; @separator=&quot;\n&quot; @indent=&quot;&quot; @owner=$guid @collection=&quot;EntryBehaviors&quot;%&#xA;%if $entry_behaviors == &quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;$state_enum_name = %StateEnumeratedName($guid)%&#xA;$func_name = %CONVERT_NAME($state_enum_name, &quot;pascal case&quot;, &quot;camel case&quot;)%&#xA;$func_name = %opName% + &quot;_&quot; + $func_name + &quot;_&quot; + &quot;entry&quot;&#xA;&#xA;$case_body = $func_name + &quot;();\n&quot;&#xA;$case_body = $entry_behaviors&#xA;&#xA;case $state_enum_name:\n&#xA;    $case_body&#xA;    break;&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;State do&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;%if $content == &quot;do&quot;%&#xA;&#xA;$is_final_state = %EASL_GET(&quot;Property&quot;, $guid, &quot;IsFinalState&quot;)%&#xA;%if $is_final_state == &quot;true&quot;%&#xA;%endTemplate%&#xA;$do_behaviors = %EASLList=&quot;Action&quot; @separator=&quot;\n&quot; @indent=&quot;&quot; @owner=$guid @collection=&quot;DoBehaviors&quot;%&#xA;%if $do_behaviors == &quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;%if genOptCOperationRefParam == &quot;T&quot;%&#xA;$ref_param = %className% + %genOptCOperationRefParamStyle% + &quot; &quot; + %genOptCOperationRefParamName%&#xA;$sInstanceName = %genOptCOperationRefParamName%&#xA;%if genOptCOperationRefParamStyle == &quot;*&quot;%&#xA;$sInstanceName += &quot;-&gt;&quot;&#xA;%else%&#xA;$sInstanceName += &quot;.&quot;&#xA;%endIf%&#xA;%endIf%&#xA;&#xA;$case_body = $func_name + &quot;();\n&quot;&#xA;$case_body = $do_behaviors&#xA;&#xA;$state_enum_name = %StateEnumeratedName($guid)%&#xA;$func_name = %CONVERT_NAME($state_enum_name, &quot;pascal case&quot;, &quot;camel case&quot;)%&#xA;$func_name = %opName% + &quot;_&quot; + $func_name + &quot;_&quot; + &quot;do&quot;&#xA;&#xA;case $state_enum_name:\n&#xA;    $case_body&#xA;    break;&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;State exit&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;%if $content == &quot;exit&quot;%&#xA;&#xA;$is_final_state = %EASL_GET(&quot;Property&quot;, $guid, &quot;IsFinalState&quot;)%&#xA;%if $is_final_state == &quot;true&quot;%&#xA;%endTemplate%&#xA;$exit_behaviors = %EASLList=&quot;Action&quot; @separator=&quot;\n&quot; @indent=&quot;&quot; @owner=$guid @collection=&quot;ExitBehaviors&quot;%&#xA;%if $exit_behaviors == &quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;$state_enum_name = %StateEnumeratedName($guid)%&#xA;$func_name = %CONVERT_NAME($state_enum_name, &quot;pascal case&quot;, &quot;camel case&quot;)%&#xA;$func_name = %opName% + &quot;_&quot; + $func_name + &quot;_&quot; + &quot;exit&quot;&#xA;&#xA;$case_body = $func_name + &quot;();\n&quot;&#xA;$case_body = $exit_behaviors&#xA;&#xA;case $state_enum_name:\n&#xA;    $case_body&#xA;    break;&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;State transition&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;%if $content == &quot;transition&quot;%&#xA;&#xA;$is_final_state = %EASL_GET(&quot;Property&quot;, $guid, &quot;IsFinalState&quot;)%&#xA;%if $is_final_state == &quot;true&quot;%&#xA;%endTemplate%&#xA;&#xA;$state_enum_name = %StateEnumeratedName($guid)%&#xA;$func_name = %CONVERT_NAME($state_enum_name, &quot;pascal case&quot;, &quot;camel case&quot;)%&#xA;$func_name = %opName% + &quot;_&quot; + $func_name + &quot;_&quot; + &quot;transition&quot;&#xA;$stm_guid = %EASL_GET(&quot;Property&quot;, $guid, &quot;Parent&quot;)%&#xA;$transition_func = %EASLList=&quot;Transition&quot; @indent=&quot;&quot; @owner=$stm_guid @collection=&quot;Transitions&quot; @option1=&quot;&quot; @option2=&quot;next_state_trans&quot; @option3=$guid%&#xA;&#xA;$case_body = $func_name + &quot;();\n&quot;&#xA;$case_body = $transition_func&#xA;&#xA;case $state_enum_name:\n&#xA;$case_body&#xA;    break;&#xA;%endTemplate%"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{F69B8CEF-C490-41cd-861E-30DD2B67C6EB}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="State Enumerate"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;$guid = $parameter1&#xA;&#xA;%if $guid==&quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;$state_enum_name = %StateEnumeratedName($guid)%&#xA;%if $state_enum_name==&quot;&quot;%&#xA;%endTemplate%&#xA;&#x9;$state_enum_name&#xA;"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{E842497A-4437-4d7d-96D4-6C909318248E}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="State EnumeratedName"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;&#xA;$guid = $parameter1&#xA;$content = $parameter2&#xA;$enumtype = $parameter3&#xA;&#xA;%if $guid==&quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;c_enum&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;%if $content == &quot;c_enum&quot;%&#xA;$name = %EASL_GET(&quot;Property&quot;, $guid, &quot;Name&quot;)%&#xA;%if $name != &quot;&quot; and $name != &quot;Final&quot;%&#xA;$state_enum_name = %className%&#xA;$state_enum_name = $state_enum_name + &quot;_&quot; + $enumtype + &quot;_&quot; + $name&#xA;$state_enum_name&#xA;%endIf%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Guard&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$obj_type = %EASL_GET(&quot;Property&quot;, $guid, &quot;ObjectType&quot;)%&#xA;&#xA;%if $obj_type == &quot;otTransition&quot;%&#xA;$source  = %EASL_GET(&quot;Property&quot;, $guid, &quot;Source&quot;)%&#xA;$target  = %EASL_GET(&quot;Property&quot;, $guid, &quot;Target&quot;)%&#xA;$sSource = %StateEnumeratedName($source)%&#xA;$sTarget = %StateEnumeratedName($target)%&#xA;%if $sSource != &quot;&quot; and $sTarget != &quot;&quot;%&#xA;$state_enum_name = $sSource + &quot;_to_&quot; + $sTarget&#xA;$state_enum_name = %TRIM($state_enum_name, &quot;_&quot;)%&#xA;$state_enum_name&#xA;%endIf%&#xA;%endIf%&#xA;&#xA;%if $obj_type != &quot;otTransition&quot;%&#xA;$cmt = &quot;fq_name = class_name::operation_name::state_name&quot;&#xA;$fq_name = %EASL_GET(&quot;Property&quot;, $guid, &quot;FQName&quot;)%&#xA;&#xA;$cmt = &quot;name = state_name&quot;&#xA;$name = %EASL_GET(&quot;Property&quot;, $guid, &quot;Name&quot;)%&#xA;&#xA;%if $name != &quot;&quot; and $name != &quot;Final&quot;%&#xA;$state_enum_name = %className%&#xA;$state_enum_name = $state_enum_name + &quot;_FsmState_&quot; + $name&#xA;$state_enum_name&#xA;%endIf%&#xA;%endIf%&#xA;"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{9D14ECEF-5812-4984-8E89-3022E072E0F0}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="StateMachine"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;&#xA;$paramin_stm_option = $parameter1&#xA;$paramin_is_static = $parameter2&#xA;$paramin_func_prefix = $parameter3&#xA;$paramin_content = $parameter4&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Constant definition&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$const_eq = &quot;=&quot;&#xA;$const_dot = &quot;.&quot;&#xA;$const_bar = &quot;_&quot;&#xA;$const_command_type = &quot;CommandType&quot;&#xA;$const_state_type = &quot;State&quot;&#xA;$const_transition_type = &quot;TransitionType&quot;&#xA;$TRANSITION_VAR = &quot;transition&quot;&#xA;$const_pre_state = &quot;previous&quot;&#xA;$const_cur_state = &quot;current&quot;&#xA;$CURR_TRANSITION = &quot;currTransition&quot;&#xA;$const_command_var = &quot;command&quot;&#xA;$TRANSCEND_VAR = &quot;transcend&quot;&#xA;$STAY_IN_CURRENT_STATE_VAR = &quot;bStayInCurrentState&quot;&#xA;$const_transition_proc = &quot;TransitionsProc&quot;&#xA;$const_state_proc = &quot;state_proc&quot;&#xA;$const_init_stm = &quot;init&quot;&#xA;$const_run_stm = &quot;run&quot;&#xA;$STATES_NOSTATE = &quot;ST_NOSTATE&quot;&#xA;$TRANSITION_NOTRANSITION = &quot;TT_NOTRANSITION&quot;&#xA;$const_action = &quot;do&quot;&#xA;$const_entry = &quot;entry&quot;&#xA;$const_exit = &quot;exit&quot;&#xA;$const_transition = &quot;transition&quot;&#xA;$const_state_ins = &quot;s_fsm_state&quot;&#xA;$const_state_enum_type = &quot;FsmState&quot;&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Guard&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$stm_guid = %EASL_GET(&quot;Property&quot;, classGUID, &quot;StateMachine&quot;)%&#xA;%if $stm_guid ==&quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Set Variables&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$var_state_type = %className% + $const_bar + $const_state_enum_type&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Content = c_enum&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;%if $paramin_content == &quot;c_enum&quot;%&#xA;$c_enum = %EASLList=&quot;StateEnumeratedName&quot; @separator=&quot;,\n&quot; @indent=&quot;    &quot; @owner=$stm_guid @collection=&quot;AllStates&quot; @option1=&quot;c_enum&quot; @option2=$const_state_enum_type%&#xA;typedef enum {\n&#xA;$c_enum,\n&#xA;} $var_state_type;\n&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Content = c_struct_def&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;%if $paramin_content == &quot;c_struct_def&quot;%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Content = c_svar_def&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;%if $paramin_content == &quot;c_svar_def&quot;%&#xA;$c_svar_def = &quot;static &quot; + $var_state_type + &quot; &quot; + $const_state_ins + $const_bar + $const_pre_state + &quot;;\n&quot;&#xA;$c_svar_def += &quot;static &quot; + $var_state_type + &quot; &quot; + $const_state_ins + $const_bar + $const_cur_state + &quot;;\n&quot;&#xA;$c_svar_def&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Content = c_sfunc_dec&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;%if $paramin_content == &quot;c_sfunc_dec&quot;%&#xA;%if $paramin_is_static == &quot;true&quot;%&#xA;$stm_name = %EASL_GET(&quot;Property&quot;, $stm_guid, &quot;Name&quot;)%&#xA;&#xA;$cmt = &quot;init function&quot;&#xA;$prototype = $stm_name + &quot;_&quot; + $const_init_stm + &quot;()&quot;&#xA;$prototype = &quot;static void &quot; + $prototype&#xA;$prototype;\n&#xA;&#xA;$cmt = &quot;run function&quot;&#xA;$prototype = $stm_name + &quot;_&quot; + $const_run_stm + &quot;()&quot;&#xA;$prototype = &quot;static void &quot; + $prototype&#xA;$prototype;\n&#xA;&#xA;$cmt = &quot;state entry function&quot;&#xA;$prototype = $stm_name + &quot;_&quot; + $const_entry + &quot;(&quot; + $var_state_type + &quot; state)&quot;&#xA;$prototype = &quot;static void &quot; + $prototype&#xA;$prototype;\n&#xA;&#xA;$cmt = &quot;state do function&quot;&#xA;$prototype = $stm_name + &quot;_&quot; + $const_action + &quot;(&quot; + $var_state_type + &quot; state)&quot;&#xA;$prototype = &quot;static void &quot; + $prototype&#xA;$prototype;\n&#xA;&#xA;$cmt = &quot;state exit function&quot;&#xA;$prototype = $stm_name + &quot;_&quot; + $const_exit + &quot;(&quot; + $var_state_type + &quot; state)&quot;&#xA;$prototype = &quot;static void &quot; + $prototype&#xA;$prototype;\n&#xA;&#xA;$cmt = &quot;state transition function&quot;&#xA;$prototype = $stm_name + &quot;_&quot; + $const_transition + &quot;(&quot; + $var_state_type + &quot; state)&quot;&#xA;$prototype = &quot;static &quot; + $var_state_type + &quot; &quot; + $prototype&#xA;$prototype;\n&#xA;&#xA;$cmt = &quot;state transition condition functions&quot;&#xA;$prototype = %EASLList=&quot;Transition&quot; @separator=&quot;\n&quot; @indent=&quot;&quot; @owner=$stm_guid @collection=&quot;Transitions&quot; @option1=&quot;&quot; @option2=&quot;c_sfunc_dec&quot; @option3=&quot;&quot;%&#xA;$prototype&#xA;&#xA;%endIf%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Content = c_sfunc_def&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;%if $paramin_content == &quot;c_sfunc_def&quot;%&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;Guard&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;%if genOptCOperationRefParam == &quot;T&quot;%&#xA;$refParam = $paramin_func_prefix + %genOptCOperationRefParamStyle% + &quot; &quot; + %genOptCOperationRefParamName%&#xA;$sInstanceName = %genOptCOperationRefParamName%&#xA;%if genOptCOperationRefParamStyle == &quot;*&quot;%&#xA;$sInstanceName += &quot;-&gt;&quot;&#xA;%else%&#xA;$sInstanceName += &quot;.&quot;&#xA;%endIf%&#xA;%endIf%&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;Statemachine initialize&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$initial_state = %EASL_GET(&quot;Property&quot;, $stm_guid, &quot;InitialState&quot;)%&#xA;$initial_state_name = %StateEnumeratedName($initial_state)%&#xA;&#xA;$initial_state_next = %EASLList=&quot;Transition&quot; @indent=&quot;&quot; @owner=$stm_guid @collection=&quot;Transitions&quot; @option1=&quot;&quot; @option2=&quot;get_init_next_state&quot; @option3=$initial_state%&#xA;$initial_state_next_name = %StateEnumeratedName($initial_state_next)%&#xA;&#xA;$prototype = &quot;void &quot; + $paramin_func_prefix + &quot;_init()&quot;&#xA;%if $paramin_is_static == &quot;true&quot;%&#xA;$prototype = &quot;static &quot; + $prototype&#xA;%endIf%&#xA;$prototype {\n&#xA;    $const_state_ins$const_bar$const_pre_state $const_eq $initial_state_name;\n&#xA;    $const_state_ins$const_bar$const_cur_state $const_eq $initial_state_next_name;\n&#xA;}\n\n&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;Statemachine run&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$prototype = &quot;void &quot; + $paramin_func_prefix + &quot;_&quot; + $const_run_stm + &quot;() {&quot;&#xA;%if $paramin_is_static == &quot;true&quot;%&#xA;$prototype = &quot;static &quot; + $prototype&#xA;%endIf%&#xA;$prototype\n&#xA;    $var_state_type next_state;\n&#xA;    if ($const_state_ins$const_bar$const_cur_state != $const_state_ins$const_bar$const_pre_state) {\n&#xA;        $func_exit = $paramin_func_prefix + &quot;_exit(&quot; + $const_state_ins + $const_bar + $const_pre_state + &quot;)&quot;&#xA;        $func_exit;\n&#xA;        $func_entry = $paramin_func_prefix + &quot;_entry(&quot; + $const_state_ins + $const_bar + $const_cur_state + &quot;)&quot;&#xA;        $func_entry;\n&#xA;        $func_action = $paramin_func_prefix + $const_bar + $const_action + &quot;(&quot; + $const_state_ins + $const_bar + $const_cur_state + &quot;)&quot;&#xA;        $func_action;\n&#xA;&#x9;&#x9;$func_trans = &quot;next_state = &quot; + $paramin_func_prefix + $const_bar + $const_transition + &quot;(&quot; + $const_state_ins + $const_bar + $const_cur_state + &quot;)&quot;&#xA;        $func_trans;\n&#xA;        $const_state_ins$const_bar$const_pre_state $const_eq $const_state_ins$const_bar$const_cur_state;\n&#xA;        $const_state_ins$const_bar$const_cur_state = next_state;\n&#xA;    } else {\n&#xA;        $func_action;\n&#xA;        $func_trans;\n&#xA;        $const_state_ins$const_bar$const_cur_state = next_state;\n&#xA;    }\n&#xA;}\n\n&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;Statemachine entry switch&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$state_callback = %EASLList=&quot;StateCallBack&quot; @separator=&quot;\n&quot; @indent=&quot;    &quot; @owner=$stm_guid @collection=&quot;AllStates&quot; @option1=&quot;entry&quot;%&#xA;$each_state_func = %EASLList=&quot;State&quot; @separator=&quot;\n&quot; @indent=&quot;    &quot; @owner=$stm_guid @collection=&quot;States&quot; @option1=$paramin_stm_option @option2=&quot;entry&quot;%&#xA;$case_body = $state_callback&#xA;&#xA;%if $case_body != &quot;&quot;%&#xA;$case_body += &quot;\n&quot;&#xA;%endIf%&#xA;&#xA;$prototype = &quot;void &quot; + $paramin_func_prefix + &quot;_&quot; + $const_entry + &quot;(&quot; + $var_state_type + &quot; state) {&quot;&#xA;%if $paramin_is_static == &quot;true&quot;%&#xA;$prototype = &quot;static &quot; + $prototype&#xA;%endIf%&#xA;$prototype\n&#xA;    switch(state) {\n&#xA;$case_body&#xA;    default:\n&#xA;        break;\n&#xA;    }\n&#xA;}\n\n&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;Statemachine do switch&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$state_callback = %EASLList=&quot;StateCallBack&quot; @separator=&quot;\n&quot; @indent=&quot;    &quot; @owner=$stm_guid @collection=&quot;AllStates&quot; @option1=&quot;do&quot;%&#xA;$case_body = $state_callback&#xA;&#xA;%if $case_body != &quot;&quot;%&#xA;$case_body += &quot;\n&quot;&#xA;%endIf%&#xA;&#xA;$prototype = &quot;void &quot; + $paramin_func_prefix + &quot;_&quot; + $const_action + &quot;(&quot; + $var_state_type + &quot; state) {&quot;&#xA;%if $paramin_is_static == &quot;true&quot;%&#xA;$prototype = &quot;static &quot; + $prototype&#xA;%endIf%&#xA;$prototype\n&#xA;    switch(state) {\n&#xA;$case_body&#xA;    default:\n&#xA;        break;\n&#xA;    }\n&#xA;}\n\n&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;Statemachine exit switch&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$state_callback = %EASLList=&quot;StateCallBack&quot; @separator=&quot;\n&quot; @indent=&quot;    &quot; @owner=$stm_guid @collection=&quot;AllStates&quot; @option1=&quot;exit&quot;%&#xA;$case_body = $state_callback&#xA;&#xA;%if $case_body != &quot;&quot;%&#xA;$case_body += &quot;\n&quot;&#xA;%endIf%&#xA;&#xA;$prototype = &quot;void &quot; + $paramin_func_prefix + &quot;_&quot; + $const_exit + &quot;(&quot; + $var_state_type + &quot; state) {&quot;&#xA;%if $paramin_is_static == &quot;true&quot;%&#xA;$prototype = &quot;static &quot; + $prototype&#xA;%endIf%&#xA;$prototype\n&#xA;    switch(state) {\n&#xA;$case_body&#xA;    default:\n&#xA;        break;\n&#xA;    }\n&#xA;}\n\n&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;Statemachine transition switch&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$state_callback = %EASLList=&quot;StateCallBack&quot; @separator=&quot;\n&quot; @indent=&quot;    &quot; @owner=$stm_guid @collection=&quot;AllStates&quot; @option1=&quot;transition&quot;%&#xA;$case_body = $state_callback&#xA;&#xA;%if $case_body != &quot;&quot;%&#xA;$case_body += &quot;\n&quot;&#xA;%endIf%&#xA;&#xA;$prototype = $var_state_type + &quot; &quot; + $paramin_func_prefix + &quot;_&quot; + $const_transition + &quot;(&quot; + $var_state_type + &quot; state) {&quot;&#xA;%if $paramin_is_static == &quot;true&quot;%&#xA;$prototype = &quot;static &quot; + $prototype&#xA;%endIf%&#xA;$prototype\n&#xA;    switch(state) {\n&#xA;$case_body&#xA;    default:\n&#xA;        break;\n&#xA;    }\n&#xA;    return state;\n&#xA;}\n\n&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;Transitions funcs def&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$transition_func = %EASLList=&quot;Transition&quot; @indent=&quot;&quot; @owner=$stm_guid @collection=&quot;Transitions&quot; @option1=&quot;&quot; @option2=&quot;transition&quot; @option3=&quot;&quot;%&#xA;$transition_func&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;Each state function&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$each_state_func_do = %EASLList=&quot;State&quot; @separator=&quot;\n&quot; @owner=$stm_guid @collection=&quot;States&quot; @option1=$paramin_stm_option @option2=&quot;true&quot; @option3=&quot;do&quot;%&#xA;$archive_func = $each_state_func_do&#xA;&#xA;$each_state_func = %EASLList=&quot;State&quot; @separator=&quot;\n&quot; @owner=$stm_guid @collection=&quot;States&quot; @option1=$paramin_stm_option%&#xA;$archive_func = $each_state_func&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;State Enumerations&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;%if $paramin_stm_option == &quot;&quot;%&#xA;$sStates = %EASLList=&quot;StateEnumerate&quot; @separator=&quot;,\n&quot; @indent=&quot;    &quot; @owner=$stm_guid @collection=&quot;AllStates&quot;%&#xA;$sTransitions = %EASLList=&quot;StateEnumerate&quot; @separator=&quot;,\n&quot; @indent=&quot;    &quot; @owner=$stm_guid @collection=&quot;DerivedTransitions&quot;%&#xA;\n&#xA;$sHistoryVars = %EASLList=&quot;StateMachineHistoryVar&quot; @separator=&quot;,&quot; @owner=classGUID @collection=&quot;AllStateMachines&quot;%&#xA;    enum $const_state_type\n&#xA;    {\n&#xA;%if $sStates != &quot;&quot;%&#xA;$sStates,\n&#xA;%endIf%&#xA;        $STATES_NOSTATE\n&#xA;    }$const_pre_state,$const_cur_state,$sHistoryVars;\n&#xA;$cmt = &quot;Transition Enumerations&quot;&#xA;    enum $const_transition_type\n&#xA;    {\n&#xA;&#xA;%if $sTransitions != &quot;&quot;%&#xA;$sTransitions,\n&#xA;%endIf%&#xA;        $TRANSITION_NOTRANSITION\n&#xA;    }$CURR_TRANSITION;\n&#xA;$cmt = &quot;StateMachine Member Variables&quot;&#xA;    int $TRANSCEND_VAR;\n&#xA;    bool $STAY_IN_CURRENT_STATE_VAR;              //IMPORTANT: Please initialize to false in constructor \n&#xA;%endIf%&#xA;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;$cmt = &quot;EOF&quot;&#xA;$cmt = &quot;-------------------------------------------------------------------------------------------&quot;&#xA;%endTemplate%&#xA;"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{3CA0C59A-7BFC-4f91-9691-3957C0717600}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="StateMachine HistoryVar"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;$GUID = $parameter1&#xA;%if $GUID==&quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;$STATE_TYPE = &quot;StateType&quot;&#xA;$HISTORY_SUFFIX = &quot;_history&quot;&#xA;&#xA;$sStateEnumeratedName = %StateEnumeratedName($GUID)%&#xA;%if $sStateEnumeratedName==&quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;$sHistory = $sStateEnumeratedName + $HISTORY_SUFFIX&#xA;$sHistory&#xA;"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{1DC13006-DD6B-441d-9E15-159F7E849203}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="Transition"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;$guid = $parameter1&#xA;$sOption = $parameter2&#xA;$content = $parameter3&#xA;$content_param = $parameter4&#xA;&#xA;%if $guid==&quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Constant&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$const_eq = &quot;=&quot;&#xA;$const_tab=&quot;    &quot;&#xA;$const_bool=&quot;bool&quot;&#xA;$const_bool_t=&quot;true&quot;&#xA;$const_bool_f=&quot;false&quot;&#xA;$TRANSITION_TYPE = &quot;TransitionType&quot;&#xA;$STATE_TYPE = &quot;StateType&quot;&#xA;$NEXT_STATE = &quot;nextState&quot;&#xA;$CURR_STATE = &quot;currState&quot;&#xA;$CURR_TRANSITION = &quot;currTransition&quot;&#xA;$TRANSCEND_VAR = &quot;transcend&quot;&#xA;$HISTORY_SUFFIX = &quot;_history&quot;&#xA;$STATES_NOSTATE = &quot;ST_NOSTATE&quot;&#xA;$STAY_IN_CURRENT_STATE_VAR = &quot;bStayInCurrentState&quot;&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Set global variables&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$is_triggered = %EASL_GET(&quot;Property&quot;, $guid, &quot;IsTriggered&quot;)%&#xA;$has_effect = %EASL_GET(&quot;Property&quot;, $guid, &quot;HasEffect&quot;)%&#xA;$is_transcend= %EASL_GET(&quot;Property&quot;, $guid, &quot;IsTranscend&quot;)%&#xA;$target = %EASL_GET(&quot;Property&quot;, $guid, &quot;Target&quot;)%&#xA;$target_parent = %EASL_GET(&quot;Property&quot;, $target, &quot;Parent&quot;)%&#xA;$stm_guid = $target_parent&#xA;$source = %EASL_GET(&quot;Property&quot;, $guid, &quot;Source&quot;)%&#xA;$source_name = %EASL_GET(&quot;Property&quot;, $source, &quot;Name&quot;)%&#xA;$initial_state = %EASL_GET(&quot;Property&quot;, $stm_guid, &quot;InitialState&quot;)%&#xA;$initial_state_source = %EASL_GET(&quot;Property&quot;, $initial_state, &quot;Source&quot;)%&#xA;$is_final = %EASL_GET(&quot;Property&quot;, $target, &quot;IsFinalState&quot;)%&#xA;$guard_expr = %EASLList=&quot;Guard&quot; @separator=&quot; &amp;&amp; &quot; @indent=&quot;    &quot; @owner=$guid @collection=&quot;Guards&quot;%&#xA;$trigger_expr = %EASLList=&quot;Trigger&quot; @separator=&quot; &amp;&amp; &quot; @indent=&quot;    &quot; @owner=$guid @collection=&quot;Triggers&quot;%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Content - get_init_next_state&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;%if $content == &quot;get_init_next_state&quot;%&#xA;%if $source == $content_param%&#xA;$target&#xA;%endIf%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Content - transition&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;%if $content == &quot;transition&quot;%&#xA;$stm_name = %EASL_GET(&quot;Property&quot;, $target_parent, &quot;Name&quot;)%&#xA;$target_name = %EASL_GET(&quot;Property&quot;, $target, &quot;Name&quot;)%&#xA;$source_name = %EASL_GET(&quot;Property&quot;, $source, &quot;Name&quot;)%&#xA;%if $source_name == &quot;Initial&quot;%&#xA;%endTemplate%&#xA;%if $target_name == &quot;Final&quot;%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;Transition function prototype&quot;&#xA;$prototype = &quot;static &quot; + $const_bool + &quot; &quot; + $stm_name + &quot;_&quot; + $source_name + &quot;_to_&quot; + $target_name + &quot;() {&quot;&#xA;$prototype\n&#xA;&#xA;%if $sOption==&quot;TriggeredGuarded&quot;%&#xA;&#xA;%if $is_triggered == &quot;false&quot; or $guard_expr == &quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;%elseIf $sOption ==&quot;TriggeredUnGuarded&quot;%&#xA;&#xA;%if $is_triggered ==&quot;false&quot; or $guard_expr != &quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;%elseIf $sOption == &quot;UnTriggeredGuarded&quot;%&#xA;&#xA;%if $is_triggered ==&quot;true&quot; or $guard_expr == &quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;%elseIf $sOption == &quot;UnTriggeredUnGuarded&quot;%&#xA;&#xA;%if $is_triggered == &quot;true&quot; or $guard_expr != &quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;%endIf%&#xA;&#xA;%if $is_final==&quot;true&quot;%&#xA;$sTargetName = $STATES_NOSTATE + &quot;/*Final State*/&quot;&#xA;%else%&#xA;$sTargetName = %StateEnumeratedName($target)%&#xA;%endIf%&#xA;&#xA;$source      = %EASL_GET(&quot;Property&quot;, $guid, &quot;Source&quot;)%&#xA;&#xA;%if $target == &quot;&quot; or $source == &quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;$bIsHistory  = %EASL_GET(&quot;Property&quot;, $target, &quot;IsHistory&quot;)%&#xA;&#xA;%if $guard_expr != &quot;&quot;%&#xA;$guard_expr = %TRIM($guard_expr)%&#xA;%endIf%&#xA;&#xA;&#xA;%if $is_triggered==&quot;true&quot; and $trigger_expr != &quot;&quot;%&#xA;$trigger_expr = %TRIM($trigger_expr)%&#xA;%endIf%&#xA;&#xA;$cmt = &quot;Operation befere judgement&quot;&#xA;$transition_effects = %EASLList=&quot;TransitionEffect&quot; @separator=&quot;\n&quot; @indent=&quot;&quot; @owner=$stm_guid @collection=&quot;DerivedTransitions&quot; @option1=$target%&#xA;$transition_effects = %TRIM($transition_effects, &quot;\n&quot;)%&#xA;%if $transition_effects != &quot;&quot;%&#xA;$transition_effects\n\n&#xA;%endIf%&#xA;&#xA;%if $is_triggered == &quot;true&quot; and $trigger_expr != &quot;&quot; and $guard_expr != &quot;&quot;%&#xA;    if ($trigger_expr &amp;&amp; $guard_expr) {\n&#xA;%elseIf $is_triggered == &quot;true&quot; and $trigger_expr != &quot;&quot; and $guard_expr == &quot;&quot;%&#xA;    if ($trigger_expr) {\n&#xA;%elseIf $guard_expr != &quot;&quot;%&#xA;    if $guard_expr {\n&#xA;%else%&#xA;$always_true = &quot;1&quot;&#xA;%endIf%&#xA;&#xA;%if $always_true == &quot;1&quot;%&#xA;    return $const_bool_t;\n&#xA;}\n\n&#xA;%endTemplate%&#xA;&#xA;        return $const_bool_t;\n&#xA;&#xA;%if $bIsHistory == &quot;true&quot;%&#xA;$target_parent = %EASL_GET(&quot;Property&quot;, $target, &quot;Parent&quot;)%&#xA;$sTargetHistory = %StateEnumeratedName($target_parent)% + $HISTORY_SUFFIX&#xA;%else%&#xA;%endIf%&#xA;&#xA;%if $has_effect == &quot;true&quot;%&#xA;$sTransition = %StateEnumeratedName($guid)%&#xA;%endIf%&#xA;&#xA;%if $is_transcend == &quot;true&quot;%&#xA;$sourceParent = %EASL_GET(&quot;Property&quot;, $source, &quot;Parent&quot;)%&#xA;$sSourceHistory = %StateEnumeratedName($SourceParent)% + $HISTORY_SUFFIX&#xA;%else%&#xA;&#xA;%endIf%&#xA;    }\n&#xA;    return $const_bool_f;\n&#xA;}\n\n&#xA;&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Content - next_state_trans&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;%if $content == &quot;next_state_trans&quot;%&#xA;$base_state = $content_param&#xA;$stm_name = %EASL_GET(&quot;Property&quot;, $target_parent, &quot;Name&quot;)%&#xA;$target_name = %EASL_GET(&quot;Property&quot;, $target, &quot;Name&quot;)%&#xA;$source_name = %EASL_GET(&quot;Property&quot;, $source, &quot;Name&quot;)%&#xA;%if $source != $base_state%&#xA;%endTemplate%&#xA;%if $target_name == &quot;Final&quot;%&#xA;%endTemplate%&#xA;$target_enum = %StateEnumeratedName($target)%&#xA;$func_name = $stm_name + &quot;_&quot; + $source_name + &quot;_to_&quot; + $target_name + &quot;()&quot;&#xA;    if ($func_name == $const_bool_t) {\n&#xA;        return $target_enum;\n&#xA;    }\n&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Content - c_sfunc_dec&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;%if $content == &quot;c_sfunc_dec&quot;%&#xA;$stm_name = %EASL_GET(&quot;Property&quot;, $target_parent, &quot;Name&quot;)%&#xA;$target_name = %EASL_GET(&quot;Property&quot;, $target, &quot;Name&quot;)%&#xA;$source_name = %EASL_GET(&quot;Property&quot;, $source, &quot;Name&quot;)%&#xA;%if $source_name == &quot;Initial&quot;%&#xA;%endTemplate%&#xA;%if $target_name == &quot;Final&quot;%&#xA;%endTemplate%&#xA;$prototype = &quot;static &quot; + $const_bool + &quot; &quot; + $stm_name + &quot;_&quot; + $source_name + &quot;_to_&quot; + $target_name + &quot;();&quot;&#xA;$prototype&#xA;%endTemplate%"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{F15A42A7-27B2-4b41-97F5-D49BEEC957E8}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="Transition Effect"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;&#xA;$guid = $parameter1&#xA;$target_guid = $parameter2&#xA;&#xA;%if $guid==&quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Constant&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$const_transtype = &quot;TransitionType&quot;&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Set Var&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$has_effect = %EASL_GET(&quot;Property&quot;, $guid, &quot;HasEffect&quot;)%&#xA;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$cmt = &quot;Impl&quot;&#xA;$cmt = &quot;===========================================================================================&quot;&#xA;$target = %EASL_GET(&quot;Property&quot;, $guid, &quot;Target&quot;)%&#xA;%if $has_effect == &quot;true&quot; and $target == $target_guid%&#xA;$state_enum_name =  %StateEnumeratedName($guid)%&#xA;$effect_beh = %EASLList=&quot;Action&quot; @separator=&quot;\n&quot; @indent=&quot;    &quot; @owner=$guid @collection=&quot;Effects&quot;%&#xA;$effect_beh\n&#xA;%endIf%&#xA;"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{D522EF6D-EBBE-4624-B73D-6A4E3F24C5BA}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="Trigger"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;$GUID = $parameter1&#xA;%if $GUID==&quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;$sName&#x9;= %EASL_GET(&quot;Property&quot;, $GUID, &quot;Name&quot;)%&#xA;$Event &#x9;= %EASL_GET(&quot;Property&quot;, $GUID, &quot;Event&quot;)%&#xA;&#xA;$EventKind = %EASL_GET(&quot;Property&quot;, $Event, &quot;EventKind&quot;)%&#xA;&#xA;%if $EventKind==&quot;ekCall&quot;%&#xA;$sExpression =  %EASL_GET(&quot;Property&quot;, $Event, &quot;Operation&quot;)%&#xA;%elseIf $EventKind==&quot;ekTime&quot;%&#xA;$sExpression =  %EASL_GET(&quot;Property&quot;, $Event, &quot;When&quot;)%&#xA;%elseIf $EventKind==&quot;ekSignal&quot;%&#xA;$sExpression =  %EASL_GET(&quot;Property&quot;, $Event, &quot;Signal&quot;)%&#xA;%elseIf $EventKind==&quot;ekChange&quot;%&#xA;$sExpression =  %EASL_GET(&quot;Property&quot;, $Event, &quot;ChangeExpression&quot;)%&#xA;%endIf%&#xA;&#xA;%if $sName != &quot;&quot; and $sExpression != &quot;&quot;%&#xA;($sName == $sExpression)&#xA;%endIf%&#xA;"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{FC293DD8-5CC9-4e54-A766-B3A8F1FB4A3F}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="Guard"/>
			<Column name="Template" value="%PI=&quot;&quot;%&#xA;$guid = $parameter1&#xA;%if $guid == &quot;&quot;%&#xA;%endTemplate%&#xA;&#xA;$expression = %EASL_GET(&quot;Property&quot;, $guid, &quot;Expression&quot;)%&#xA;&#xA;%if $expression != &quot;&quot;%&#xA;($expression)&#xA;%endIf%"/>
		</DataRow>
		<DataRow>
			<Column name="TemplateID" value="{5AACD433-A27F-455d-8031-9DFB35D659C2}"/>
			<Column name="TemplateType" value="C_Code_Template"/>
			<Column name="TemplateName" value="Import Section"/>
			<Column name="Template" value="%fileImports%"/>
		</DataRow>
	</DataSet>
	<DataSet name="C" table="t_datatypes where ProductName='C'" filter="Type='#Type#' and ProductName='#ProductName#' and DataType='#DataType#'" stoplist=";DatatypeID;">
		<DataRow>
			<Column name="Type" value="Code"/>
			<Column name="ProductName" value="C"/>
			<Column name="DataType" value="char"/>
			<Column name="MaxScale" value="0"/>
			<Column name="User" value="0"/>
			<Column name="GenericType" value="Character"/>
			<Column name="DatatypeID" value="849"/>
		</DataRow>
		<DataRow>
			<Column name="Type" value="Code"/>
			<Column name="ProductName" value="C"/>
			<Column name="DataType" value="unsigned char"/>
			<Column name="MaxScale" value="0"/>
			<Column name="User" value="0"/>
			<Column name="GenericType" value="Character"/>
			<Column name="DatatypeID" value="850"/>
		</DataRow>
		<DataRow>
			<Column name="Type" value="Code"/>
			<Column name="ProductName" value="C"/>
			<Column name="DataType" value="int"/>
			<Column name="MaxScale" value="0"/>
			<Column name="User" value="0"/>
			<Column name="GenericType" value="Integer"/>
			<Column name="DatatypeID" value="851"/>
		</DataRow>
		<DataRow>
			<Column name="Type" value="Code"/>
			<Column name="ProductName" value="C"/>
			<Column name="DataType" value="short"/>
			<Column name="MaxScale" value="0"/>
			<Column name="User" value="0"/>
			<Column name="GenericType" value="Integer"/>
			<Column name="DatatypeID" value="852"/>
		</DataRow>
		<DataRow>
			<Column name="Type" value="Code"/>
			<Column name="ProductName" value="C"/>
			<Column name="DataType" value="long"/>
			<Column name="MaxScale" value="0"/>
			<Column name="User" value="0"/>
			<Column name="GenericType" value="Integer"/>
			<Column name="DatatypeID" value="853"/>
		</DataRow>
		<DataRow>
			<Column name="Type" value="Code"/>
			<Column name="ProductName" value="C"/>
			<Column name="DataType" value="unsigned int"/>
			<Column name="MaxScale" value="0"/>
			<Column name="User" value="0"/>
			<Column name="GenericType" value="Integer"/>
			<Column name="DatatypeID" value="854"/>
		</DataRow>
		<DataRow>
			<Column name="Type" value="Code"/>
			<Column name="ProductName" value="C"/>
			<Column name="DataType" value="unsigned short"/>
			<Column name="MaxScale" value="0"/>
			<Column name="User" value="0"/>
			<Column name="GenericType" value="Integer"/>
			<Column name="DatatypeID" value="855"/>
		</DataRow>
		<DataRow>
			<Column name="Type" value="Code"/>
			<Column name="ProductName" value="C"/>
			<Column name="DataType" value="unsigned long"/>
			<Column name="MaxScale" value="0"/>
			<Column name="User" value="0"/>
			<Column name="GenericType" value="Integer"/>
			<Column name="DatatypeID" value="856"/>
		</DataRow>
		<DataRow>
			<Column name="Type" value="Code"/>
			<Column name="ProductName" value="C"/>
			<Column name="DataType" value="void"/>
			<Column name="MaxScale" value="0"/>
			<Column name="User" value="0"/>
			<Column name="GenericType" value="Void"/>
			<Column name="DatatypeID" value="857"/>
		</DataRow>
		<DataRow>
			<Column name="Type" value="Code"/>
			<Column name="ProductName" value="C"/>
			<Column name="DataType" value="float"/>
			<Column name="MaxScale" value="0"/>
			<Column name="User" value="0"/>
			<Column name="GenericType" value="Real"/>
			<Column name="DatatypeID" value="858"/>
		</DataRow>
		<DataRow>
			<Column name="Type" value="Code"/>
			<Column name="ProductName" value="C"/>
			<Column name="DataType" value="double"/>
			<Column name="MaxScale" value="0"/>
			<Column name="User" value="0"/>
			<Column name="GenericType" value="Real"/>
			<Column name="DatatypeID" value="859"/>
		</DataRow>
	</DataSet>
</RefData>